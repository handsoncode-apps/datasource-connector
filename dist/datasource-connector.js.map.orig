<<<<<<< HEAD
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a4c18bd7568d5b514289","webpack:///./src/index.js","webpack:///./src/utils/http.js","webpack:///./src/utils/request.js"],"names":["DataSourceConnector","Handsontable","plugins","BasePlugin","constructor","hotInstance","http","colHeaders","filters","order","isEnabled","enabled","hot","getSettings","dataSourceConnector","controllerUrl","onDataSend","undefined","addHook","defaultHeaders","requestHeaders","addListener","args","runHooks","enablePlugin","index","amount","onRemoveCol","onRemoveRow","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","rows","onRowMove","currentColumn","newSize","isDoubleClick","onRowResize","cellRange","mergeParent","auto","onMergeCell","onColumnResize","onUnmergeCells","conditions","getPlugin","conditionCollection","exportAllConditions","forEach","item","uri","post","then","response","_loadData","_move","array","from","to","increment","k","columnNames","i","length","push","colMoved","value","data","payload","sourceIndex","put","noOfRows","getData","row","setCellMeta","getCellMeta","row_id","name","removedCol","delete","err","col","col_id","id","setDataAtCell","size","rowsRemoved","rowsMoved","currentRow","mergedParent","mergedCells","range","_normalizeRange","j","highlight","responseData","normalizedData","columnName","loadData","rowId","get","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","oldValue","newValue","meta","instance","destroy","registerPlugin","Http","listeners","callback","listener","setTimeout","url","request","method","body","JSON","stringify","parse","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","headers","Object","keys","key","setRequestHeader","onload","status","statusText","onerror","send","Request"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4c18bd7568d5b514289","import Http from './utils/http';\r\n\r\n/**\r\n * @plugin DataSourceConnector\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * This plugin enable the backend side data management for handsontable instance\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance);\r\n    this.http = {};\r\n    this.colHeaders = [];\r\n    this.filters = [];\r\n    this.order = {};\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector;\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      if (this.hot.getSettings().dataSourceConnector.onDataSend !== undefined) {\r\n        this.hot.addHook('onDataSend', this.hot.getSettings().dataSourceConnector.onDataSend);\r\n      }\r\n      this.http = new Http(controllerUrl);\r\n      this.http.defaultHeaders = this.hot.getSettings().dataSourceConnector.requestHeaders;\r\n      var hotInstance = this.hot;\r\n      this.http.addListener((...args) => {\r\n        if (hotInstance !== undefined) {\r\n          hotInstance.runHooks('onDataSend', args[0]);\r\n        }\r\n      });\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => false);\r\n    this.addHook('beforeFilter', () => false);\r\n    this.addHook('beforeRemoveCol', (index, amount) => this.onRemoveCol(index, amount));\r\n    this.addHook('beforeRemoveRow', (index, amount) => this.onRemoveRow(index, amount));\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, order) => this.onAfterColumnSort(column, order));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack));\r\n    this.addHook('beforeRowMove', (rows, target) => this.onRowMove(rows, target));\r\n    this.addHook('afterRowResize', (currentColumn, newSize, isDoubleClick) => this.onRowResize(currentColumn, newSize, isDoubleClick));\r\n    this.addHook('afterMergeCells', (cellRange, mergeParent, auto) => this.onMergeCell(cellRange, mergeParent, auto));\r\n    this.addHook('afterColumnResize', (currentColumn, newSize, isDoubleClick) => this.onColumnResize(currentColumn, newSize, isDoubleClick))\r\n    this.addHook('beforeUnmergeCells', (cellRange, auto) => this.onUnmergeCells(cellRange, auto));\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n  /**\r\n   * The onAfterFilter method is called after filtering.\r\n   *\r\n   * @param {array} conditionsStack\r\n   */\r\n  onAfterFilter(conditionsStack) {\r\n    var conditions = hot.getPlugin('filters').conditionCollection.exportAllConditions();\r\n    conditions.forEach((item, index) => {\r\n      conditions[index].column = this.colHeaders[conditionsStack[index].column];\r\n    });\r\n\r\n    this.filters = conditions;\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri).then((response) => {\r\n      this._loadData(response);\r\n    });\r\n  }\r\n\r\n  // move element in array from position to target\r\n  _move(array, from, to) {\r\n    if (to === from) {\r\n      return array;\r\n    }\r\n\r\n    var target = array[from];\r\n    var increment = to < from ? -1 : 1;\r\n\r\n    for (var k = from; k !== to; k += increment) {\r\n      array[k] = array[k + increment];\r\n    }\r\n    array[to] = target;\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The onAfterColumnMove method is called after moving column.\r\n   *\r\n   * @param {array} columns\r\n   * @param {number} target\r\n   */\r\n  onAfterColumnMove(columns, target) {\r\n\r\n    var columnNames = [];\r\n    var i = 0;\r\n    for (i = 0; i < columns.length; i++) {\r\n      columnNames.push(this.colHeaders[columns[i]]);\r\n    }\r\n\r\n    var colMoved = {\r\n      columnNames,\r\n      target\r\n    };\r\n\r\n    this.http.post('/column/move', colMoved)\r\n      .then((value) => {\r\n        this.colHeaders = value.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The onAfterCreateCol method is called after creating new column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateCol(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    var sourceIndex = index === 0 ? 1 : 0;\r\n    this.http.put('/column', payload)\r\n      .then((value) => {\r\n        var noOfRows = this.hot.getData().length;\r\n        for (var row = 0; row < noOfRows; row++) {\r\n          this.hot.setCellMeta(row, index, 'row_id', this.hot.getCellMeta(row, sourceIndex).row_id);\r\n          this.hot.setCellMeta(row, index, 'col_id', value.name);\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * The onAfterRemoveCol method is called after removing column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * */\r\n  async onRemoveCol(index, amount) {\r\n    var removedCol = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      removedCol.push(this.colHeaders[i + index]);\r\n    }\r\n    try {\r\n      var value = await this.http.delete('/column', removedCol);\r\n      if (value.data) {\r\n        var response = await this.http.post('/data');\r\n        this._loadData(response);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateRow(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    this.http.put('/row', payload)\r\n      .then((value) => {\r\n        var row = this.hot.getData()[index];\r\n        var sourceIndex = index === 1 ? 2 : 1;\r\n        for (var col = 0; col < row.length; col++) {\r\n          var column = this.hot.getCellMeta(sourceIndex, col).col_id;\r\n          this.hot.setCellMeta(index, col, 'row_id', value.id);\r\n          this.hot.setCellMeta(index, col, 'col_id', column);\r\n          this.hot.setDataAtCell(index, col, value.data[column]);\r\n        }\r\n      });\r\n  }\r\n\r\n  onColumnResize(currentColumn, newSize, isDoubleClick) {\r\n    let uri = {\r\n      column: this.hot.getCellMeta(1, currentColumn).col_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/column/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   */\r\n  onRemoveRow(index, amount) {\r\n    var rowsRemoved = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      rowsRemoved.push((this.hot.getCellMeta(i + index, 1).row_id));\r\n    }\r\n    this.http.delete('/row', rowsRemoved)\r\n      .then((value) => {\r\n        if (!value) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n  }\r\n\r\n  /**\r\n  * Method called after moving row.\r\n  *\r\n  * @param {array} rows\r\n  * @param {number} target\r\n  */\r\n  onRowMove(rows, target) {\r\n    var rowsMoved = [];\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rowsMoved.push(this.hot.getCellMeta(rows[i], 1).row_id);\r\n    };\r\n    var payload = {\r\n      rowsMoved,\r\n      target\r\n    };\r\n    this.http.post('/row/move', payload);\r\n  }\r\n\r\n  /**\r\n   * Method called after resizing row, event will be passed to backend.\r\n   *\r\n   * @param {number} currentRow\r\n   * @param {number} newSize\r\n   * @param {boolean} isDoubleClick\r\n   */\r\n  onRowResize(currentRow, newSize, isDoubleClick) {\r\n    let uri = {\r\n      row: this.hot.getCellMeta(currentRow, 1).row_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/row/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after sorting column, event will be passed to backend.\r\n   *\r\n   * @param {number} column\r\n   * @param {boolean} order\r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.order = order !== undefined ? { column: this.colHeaders[column], order: order === true ? 'ASC' : 'DESC' } : {};\r\n\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri)\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after merging cells, event will be passed to backend.\r\n   *\r\n   * @param {cellRange} CellRange\r\n   * @param {mergeParent} Object\r\n   * @param {auto} boolean\r\n   */\r\n  onMergeCell(cellRange, mergeParent, auto) {\r\n    var mergedParent = {\r\n      column: this.hot.getCellMeta(mergeParent.row, mergeParent.col).col_id,\r\n      row: this.hot.getCellMeta(mergeParent.row, mergeParent.col).row_id\r\n    };\r\n    var mergedCells = [];\r\n\r\n    var range = this._normalizeRange(cellRange);\r\n\r\n    for (var i = range.from.row; i <= range.to.row; i++) {\r\n      for (var j = range.from.col; j <= range.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/merge', {\r\n      mergedParent,\r\n      mergedCells\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Normalize cell range\r\n   * @param {*} cellRange \r\n   */\r\n  _normalizeRange(cellRange) {\r\n    let from;\r\n    let to;\r\n    if (cellRange.from.row < cellRange.to.row) {\r\n      from = cellRange.from;\r\n      to = cellRange.to;\r\n    } else if (cellRange.from.row > cellRange.to.row) {\r\n      from = cellRange.to;\r\n      to = cellRange.from;\r\n    } else if (cellRange.from.row === cellRange.to.row) {\r\n      if (cellRange.from.col > cellRange.to.col) {\r\n        from = cellRange.to;\r\n        to = cellRange.from;\r\n      } else {\r\n        from = cellRange.from;\r\n        to = cellRange.to;\r\n      }\r\n    }\r\n    return {from, to};\r\n  }\r\n\r\n  onUnmergeCells(cellRange, auto) {\r\n    let mergedParent = {\r\n      column: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).col_id,\r\n      row: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).row_id\r\n    };\r\n    let mergedCells = [];\r\n    for (let i = cellRange.from.row; i <= cellRange.to.row; i++) {\r\n      for (let j = cellRange.from.col; j <= cellRange.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/unmerge', {\r\n      mergedParent: mergedParent,\r\n      mergedCells: mergedCells\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response\r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data;\r\n    let normalizedData = [];\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      let item = [];\r\n      // eslint-disable-next-line guard-for-in\r\n      for (let columnName in responseData[row]) {\r\n        item.push(responseData[row][columnName]);\r\n      }\r\n      normalizedData.push(item);\r\n    }\r\n\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = [];\r\n\r\n    // eslint-disable-next-line guard-for-in\r\n    for (let columnName in responseData[0]) {\r\n      columnNames.push(columnName);\r\n    }\r\n\r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, 'row_id', responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, 'col_id', columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after Handsontable instance initiation\r\n   */\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then((response) => {\r\n        this.hot.updateSettings(response.data);\r\n      });\r\n    this.http.post('/data')\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1]);\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta.instance;\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/update', {\r\n        changes: changeItems,\r\n        source\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector;\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Request from './request';\r\n\r\n/**\r\n * Send the xhr request to server\r\n *\r\n * @param {Request} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n  constructor(controllerUrl) {\r\n    this.controllerUrl = controllerUrl;\r\n    this.listeners = [];\r\n    this.defaultHeaders = {};\r\n  }\r\n\r\n  /**\r\n     * make a callback function that listen for HTTP events\r\n     *\r\n     * @param {function} callback\r\n     */\r\n  addListener(callback) {\r\n    if (typeof callback === 'function' || false) {\r\n      this.listeners.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * this method emit the onDataSend event to listeners\r\n     *\r\n     * @param {any} args\r\n     */\r\n  onDataSend(...args) {\r\n    if (this.listeners && this.listeners.length) {\r\n      this.listeners.forEach((listener) => {\r\n        setTimeout(() => { listener(...args); }, 5);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * make HTTP DELETE to url with payload data\r\n   *\r\n   * @param {string} url\r\n   * @param {any} data\r\n   */\r\n  delete(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'DELETE';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP PUT to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  put(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'PUT';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP POST to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  post(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'POST';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP GET call on url\r\n     *\r\n     * @param {string} url\r\n     */\r\n  get(url) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n    *\r\n    * @param {object} obj\r\n    */\r\n  request(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(obj.method || 'GET', obj.url);\r\n      if (obj.headers) {\r\n        Object.keys(obj.headers).forEach((key) => {\r\n          xhr.setRequestHeader(key, obj.headers[key]);\r\n        });\r\n      }\r\n      xhr.onload = () => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      };\r\n      xhr.onerror = () => reject(xhr.statusText);\r\n      xhr.send(obj.body);\r\n    });\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/http.js","/**\r\n * This class represents the http request call in xhr context\r\n */\r\nexport default class Request {\r\n  constructor(headers) {\r\n    this.url = '';\r\n    this.method = 'GET';\r\n    this.headers = headers !== undefined ? headers : { 'Content-Type': 'application/json' };\r\n    this.body = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/request.js"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack://DatasourceConector/webpack/universalModuleDefinition","webpack://DatasourceConector/webpack/bootstrap","webpack://DatasourceConector/./src/utils/request.js","webpack://DatasourceConector/./src/utils/http.js","webpack://DatasourceConector/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Request","constructor","headers","this","url","method","undefined","Content-Type","body","http_Http","controllerUrl","listeners","defaultHeaders","addListener","callback","push","onDataSend","args","length","forEach","listener","setTimeout","delete","data","request","JSON","stringify","then","response","parse","put","post","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","keys","key","setRequestHeader","onload","status","statusText","onerror","send","src_DataSourceConnector","Handsontable","plugins","BasePlugin","hotInstance","super","http","colHeaders","filters","order","isEnabled","enabled","hot","getSettings","dataSourceConnector","addHook","requestHeaders","runHooks","enablePlugin","index","amount","onRemoveCol","onRemoveRow","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","rows","onRowMove","currentColumn","newSize","isDoubleClick","onRowResize","cellRange","mergeParent","auto","onMergeCell","onColumnResize","onUnmergeCells","conditions","getPlugin","conditionCollection","exportAllConditions","item","uri","_loadData","_move","array","from","to","increment","k","columnNames","colMoved","payload","sourceIndex","noOfRows","getData","row","setCellMeta","getCellMeta","row_id","[object Object]","removedCol","err","col","col_id","id","setDataAtCell","size","rowsRemoved","rowsMoved","currentRow","mergedParent","mergedCells","range","_normalizeRange","j","highlight","responseData","normalizedData","columnName","loadData","rowId","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","oldValue","newValue","meta","instance","destroy","__webpack_exports__","registerPlugin"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * This class represents the http request call in xhr context\r\n */\r\nexport default class Request {\r\n  constructor(headers) {\r\n    this.url = '';\r\n    this.method = 'GET';\r\n    this.headers = headers !== undefined ? headers : { 'Content-Type': 'application/json' };\r\n    this.body = '';\r\n  }\r\n}\r\n","import Request from './request';\r\n\r\n/**\r\n * Send the xhr request to server\r\n *\r\n * @param {Request} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n  constructor(controllerUrl) {\r\n    this.controllerUrl = controllerUrl;\r\n    this.listeners = [];\r\n    this.defaultHeaders = {};\r\n  }\r\n\r\n  /**\r\n     * make a callback function that listen for HTTP events\r\n     *\r\n     * @param {function} callback\r\n     */\r\n  addListener(callback) {\r\n    if (typeof callback === 'function' || false) {\r\n      this.listeners.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * this method emit the onDataSend event to listeners\r\n     *\r\n     * @param {any} args\r\n     */\r\n  onDataSend(...args) {\r\n    if (this.listeners && this.listeners.length) {\r\n      this.listeners.forEach((listener) => {\r\n        setTimeout(() => { listener(...args); }, 5);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * make HTTP DELETE to url with payload data\r\n   *\r\n   * @param {string} url\r\n   * @param {any} data\r\n   */\r\n  delete(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'DELETE';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP PUT to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  put(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'PUT';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP POST to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  post(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'POST';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP GET call on url\r\n     *\r\n     * @param {string} url\r\n     */\r\n  get(url) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n    *\r\n    * @param {object} obj\r\n    */\r\n  request(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(obj.method || 'GET', obj.url);\r\n      if (obj.headers) {\r\n        Object.keys(obj.headers).forEach((key) => {\r\n          xhr.setRequestHeader(key, obj.headers[key]);\r\n        });\r\n      }\r\n      xhr.onload = () => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      };\r\n      xhr.onerror = () => reject(xhr.statusText);\r\n      xhr.send(obj.body);\r\n    });\r\n  };\r\n}\r\n","import Http from './utils/http';\r\n\r\n/**\r\n * @plugin DataSourceConnector\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * This plugin enable the backend side data management for handsontable instance\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance);\r\n    this.http = {};\r\n    this.colHeaders = [];\r\n    this.filters = [];\r\n    this.order = {};\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector;\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      if (this.hot.getSettings().dataSourceConnector.onDataSend !== undefined) {\r\n        this.hot.addHook('onDataSend', this.hot.getSettings().dataSourceConnector.onDataSend);\r\n      }\r\n      this.http = new Http(controllerUrl);\r\n      this.http.defaultHeaders = this.hot.getSettings().dataSourceConnector.requestHeaders;\r\n      var hotInstance = this.hot;\r\n      this.http.addListener((...args) => {\r\n        if (hotInstance !== undefined) {\r\n          hotInstance.runHooks('onDataSend', args[0]);\r\n        }\r\n      });\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => false);\r\n    this.addHook('beforeFilter', () => false);\r\n    this.addHook('beforeRemoveCol', (index, amount) => this.onRemoveCol(index, amount));\r\n    this.addHook('beforeRemoveRow', (index, amount) => this.onRemoveRow(index, amount));\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, order) => this.onAfterColumnSort(column, order));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack));\r\n    this.addHook('beforeRowMove', (rows, target) => this.onRowMove(rows, target));\r\n    this.addHook('afterRowResize', (currentColumn, newSize, isDoubleClick) => this.onRowResize(currentColumn, newSize, isDoubleClick));\r\n    this.addHook('afterMergeCells', (cellRange, mergeParent, auto) => this.onMergeCell(cellRange, mergeParent, auto));\r\n    this.addHook('afterColumnResize', (currentColumn, newSize, isDoubleClick) => this.onColumnResize(currentColumn, newSize, isDoubleClick))\r\n    this.addHook('beforeUnmergeCells', (cellRange, auto) => this.onUnmergeCells(cellRange, auto));\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n  /**\r\n   * The onAfterFilter method is called after filtering.\r\n   *\r\n   * @param {array} conditionsStack\r\n   */\r\n  onAfterFilter(conditionsStack) {\r\n    var conditions = hot.getPlugin('filters').conditionCollection.exportAllConditions();\r\n    conditions.forEach((item, index) => {\r\n      conditions[index].column = this.colHeaders[conditionsStack[index].column];\r\n    });\r\n\r\n    this.filters = conditions;\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri).then((response) => {\r\n      this._loadData(response);\r\n    });\r\n  }\r\n\r\n  // move element in array from position to target\r\n  _move(array, from, to) {\r\n    if (to === from) {\r\n      return array;\r\n    }\r\n\r\n    var target = array[from];\r\n    var increment = to < from ? -1 : 1;\r\n\r\n    for (var k = from; k !== to; k += increment) {\r\n      array[k] = array[k + increment];\r\n    }\r\n    array[to] = target;\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The onAfterColumnMove method is called after moving column.\r\n   *\r\n   * @param {array} columns\r\n   * @param {number} target\r\n   */\r\n  onAfterColumnMove(columns, target) {\r\n\r\n    var columnNames = [];\r\n    var i = 0;\r\n    for (i = 0; i < columns.length; i++) {\r\n      columnNames.push(this.colHeaders[columns[i]]);\r\n    }\r\n\r\n    var colMoved = {\r\n      columnNames,\r\n      target\r\n    };\r\n\r\n    this.http.post('/column/move', colMoved)\r\n      .then((value) => {\r\n        this.colHeaders = value.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The onAfterCreateCol method is called after creating new column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateCol(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    var sourceIndex = index === 0 ? 1 : 0;\r\n    this.http.put('/column', payload)\r\n      .then((value) => {\r\n        var noOfRows = this.hot.getData().length;\r\n        for (var row = 0; row < noOfRows; row++) {\r\n          this.hot.setCellMeta(row, index, 'row_id', this.hot.getCellMeta(row, sourceIndex).row_id);\r\n          this.hot.setCellMeta(row, index, 'col_id', value.name);\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * The onAfterRemoveCol method is called after removing column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * */\r\n  async onRemoveCol(index, amount) {\r\n    var removedCol = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      removedCol.push(this.colHeaders[i + index]);\r\n    }\r\n    try {\r\n      var value = await this.http.delete('/column', removedCol);\r\n      if (value.data) {\r\n        var response = await this.http.post('/data');\r\n        this._loadData(response);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateRow(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    this.http.put('/row', payload)\r\n      .then((value) => {\r\n        var row = this.hot.getData()[index];\r\n        var sourceIndex = index === 1 ? 2 : 1;\r\n        for (var col = 0; col < row.length; col++) {\r\n          var column = this.hot.getCellMeta(sourceIndex, col).col_id;\r\n          this.hot.setCellMeta(index, col, 'row_id', value.id);\r\n          this.hot.setCellMeta(index, col, 'col_id', column);\r\n          this.hot.setDataAtCell(index, col, value.data[column]);\r\n        }\r\n      });\r\n  }\r\n\r\n  onColumnResize(currentColumn, newSize, isDoubleClick) {\r\n    let uri = {\r\n      column: this.hot.getCellMeta(1, currentColumn).col_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/column/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   */\r\n  onRemoveRow(index, amount) {\r\n    var rowsRemoved = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      rowsRemoved.push((this.hot.getCellMeta(i + index, 1).row_id));\r\n    }\r\n    this.http.delete('/row', rowsRemoved)\r\n      .then((value) => {\r\n        if (!value) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n  }\r\n\r\n  /**\r\n  * Method called after moving row.\r\n  *\r\n  * @param {array} rows\r\n  * @param {number} target\r\n  */\r\n  onRowMove(rows, target) {\r\n    var rowsMoved = [];\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rowsMoved.push(this.hot.getCellMeta(rows[i], 1).row_id);\r\n    };\r\n    var payload = {\r\n      rowsMoved,\r\n      target\r\n    };\r\n    this.http.post('/row/move', payload);\r\n  }\r\n\r\n  /**\r\n   * Method called after resizing row, event will be passed to backend.\r\n   *\r\n   * @param {number} currentRow\r\n   * @param {number} newSize\r\n   * @param {boolean} isDoubleClick\r\n   */\r\n  onRowResize(currentRow, newSize, isDoubleClick) {\r\n    let uri = {\r\n      row: this.hot.getCellMeta(currentRow, 1).row_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/row/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after sorting column, event will be passed to backend.\r\n   *\r\n   * @param {number} column\r\n   * @param {boolean} order\r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.order = order !== undefined ? { column: this.colHeaders[column], order: order === true ? 'ASC' : 'DESC' } : {};\r\n\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri)\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after merging cells, event will be passed to backend.\r\n   *\r\n   * @param {cellRange} CellRange\r\n   * @param {mergeParent} Object\r\n   * @param {auto} boolean\r\n   */\r\n  onMergeCell(cellRange, mergeParent, auto) {\r\n    var mergedParent = {\r\n      column: this.hot.getCellMeta(mergeParent.row, mergeParent.col).col_id,\r\n      row: this.hot.getCellMeta(mergeParent.row, mergeParent.col).row_id\r\n    };\r\n    var mergedCells = [];\r\n\r\n    var range = this._normalizeRange(cellRange);\r\n\r\n    for (var i = range.from.row; i <= range.to.row; i++) {\r\n      for (var j = range.from.col; j <= range.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/merge', {\r\n      mergedParent,\r\n      mergedCells\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Normalize cell range\r\n   * @param {*} cellRange \r\n   */\r\n  _normalizeRange(cellRange) {\r\n    let from;\r\n    let to;\r\n    if (cellRange.from.row < cellRange.to.row) {\r\n      from = cellRange.from;\r\n      to = cellRange.to;\r\n    } else if (cellRange.from.row > cellRange.to.row) {\r\n      from = cellRange.to;\r\n      to = cellRange.from;\r\n    } else if (cellRange.from.row === cellRange.to.row) {\r\n      if (cellRange.from.col > cellRange.to.col) {\r\n        from = cellRange.to;\r\n        to = cellRange.from;\r\n      } else {\r\n        from = cellRange.from;\r\n        to = cellRange.to;\r\n      }\r\n    }\r\n    return {from, to};\r\n  }\r\n\r\n  onUnmergeCells(cellRange, auto) {\r\n    let mergedParent = {\r\n      column: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).col_id,\r\n      row: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).row_id\r\n    };\r\n    let mergedCells = [];\r\n    for (let i = cellRange.from.row; i <= cellRange.to.row; i++) {\r\n      for (let j = cellRange.from.col; j <= cellRange.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/unmerge', {\r\n      mergedParent: mergedParent,\r\n      mergedCells: mergedCells\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response\r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data;\r\n    let normalizedData = [];\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      let item = [];\r\n      // eslint-disable-next-line guard-for-in\r\n      for (let columnName in responseData[row]) {\r\n        item.push(responseData[row][columnName]);\r\n      }\r\n      normalizedData.push(item);\r\n    }\r\n\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = [];\r\n\r\n    // eslint-disable-next-line guard-for-in\r\n    for (let columnName in responseData[0]) {\r\n      columnNames.push(columnName);\r\n    }\r\n\r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, 'row_id', responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, 'col_id', columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after Handsontable instance initiation\r\n   */\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then((response) => {\r\n        this.hot.updateSettings(response.data);\r\n      });\r\n    this.http.post('/data')\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1]);\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta.instance;\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/update', {\r\n        changes: changeItems,\r\n        source\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector;\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector);\r\n"],"sourceRoot":""}
>>>>>>> origin/develop
