{"version":3,"sources":["webpack://DatasourceConector/webpack/universalModuleDefinition","webpack://DatasourceConector/webpack/bootstrap","webpack://DatasourceConector/./src/utils/uri.js","webpack://DatasourceConector/./src/utils/request.js","webpack://DatasourceConector/./src/utils/http.js","webpack://DatasourceConector/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","URI","constructor","this","_serialize","prefix","queryStrings","key","push","encodeURIComponent","join","string","undefined","Request","url","method","headers","Content-Type","body","http_Http","controllerUrl","listeners","addListener","callback","onDataSend","args","length","forEach","listener","post","data","request","JSON","stringify","then","response","parse","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","keys","setRequestHeader","onload","status","statusText","onerror","send","src_DataSourceConnector","Handsontable","plugins","BasePlugin","hotInstance","super","http","colHeaders","filters","order","isEnabled","enabled","hot","getSettings","dataSourceConnector","enablePlugin","addHook","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","index","amount","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","conditions","getPlugin","conditionCollection","exportAllConditions","item","query","assign","_loadData","_move","array","from","to","increment","k","columnNames","colMoved","payload","sourceIndex","setCellMeta","row","getCellMeta","row_id","getData","col","col_id","id","setDataAtCell","uri","responseData","normalizedData","columnName","loadData","rowId","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","oldValue","newValue","meta","instance","destroy","__webpack_exports__","registerPlugin"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class URI {\r\n  constructor(object) {\r\n    this.object = object;\r\n  }\r\n\r\n  _serialize(object, prefix) {\r\n    let queryStrings = [],\r\n      property;\r\n    for (property in object) {\r\n      if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n        let key = prefix ? `${prefix}[${property}]` : property;\r\n        let value = object[property];\r\n        queryStrings.push((value !== null && typeof value === 'object') ? this._serialize(value, key) : `${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\r\n      }\r\n    }\r\n    return queryStrings.join('&');\r\n  }\r\n\r\n  string() {\r\n    return this.object === undefined ? '' : `?${this._serialize(this.object)}`;\r\n  }\r\n}\r\n","/**\r\n * This class represents the http request call in xhr context\r\n */\r\nexport default class Request {\r\n  constructor() {\r\n    this.url = '';\r\n    this.method = 'GET';\r\n    this.headers = { 'Content-Type': 'application/json' };\r\n    this.body = '';\r\n  }\r\n}\r\n","import Request from './request';\r\n\r\n/**\r\n * Send the xhr request to server\r\n *\r\n * @param {Request} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n  constructor(controllerUrl) {\r\n    this.controllerUrl = controllerUrl;\r\n    this.listeners = [];\r\n  }\r\n\r\n  /**\r\n     * make a callback function that listen for HTTP events\r\n     *\r\n     * @param {function} callback\r\n     */\r\n  addListener(callback) {\r\n    if (typeof callback === 'function' || false) {\r\n      this.listeners.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * this method emit the onDataSend event to listeners\r\n     *\r\n     * @param {any} args\r\n     */\r\n  onDataSend(...args) {\r\n    if (this.listeners && this.listeners.length) {\r\n      this.listeners.forEach((listener) => {\r\n        listener(...args);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n     * make HTTP POST to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  post(url, data) {\r\n\r\n    let request = new Request();\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'POST';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP GET call on url\r\n     *\r\n     * @param {string} url\r\n     */\r\n  get(url) {\r\n    var request = new Request();\r\n    request.url = this.controllerUrl + url;\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n    *\r\n    * @param {object} obj\r\n    */\r\n  request(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(obj.method || 'GET', obj.url);\r\n      if (obj.headers) {\r\n        Object.keys(obj.headers).forEach((key) => {\r\n          xhr.setRequestHeader(key, obj.headers[key]);\r\n        });\r\n      }\r\n      xhr.onload = () => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      };\r\n      xhr.onerror = () => reject(xhr.statusText);\r\n      xhr.send(obj.body);\r\n    });\r\n  };\r\n}\r\n","import URI from './utils/uri';\r\nimport Http from './utils/http';\r\n\r\n/**\r\n * @plugin DataSourceConnector\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * This plugin enable the backend side data management for handsontable instance\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance);\r\n    this.http = {};\r\n    this.colHeaders = [];\r\n    this.filters = {};\r\n    this.order = {};\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector;\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      let onDataSend = this.hot.getSettings().dataSourceConnector.onDataSend;\r\n      this.http = new Http(controllerUrl);\r\n      this.http.addListener(onDataSend);\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => false);\r\n    this.addHook('beforeFilter', () => false);\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, order) => this.onAfterColumnSort(column, order));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack));\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n  /**\r\n   * The onAfterFilter method is called after filtering.\r\n   *\r\n   * @param {array} conditionsStack\r\n   */\r\n  onAfterFilter(conditionsStack) {\r\n    var conditions = hot.getPlugin('filters').conditionCollection.exportAllConditions();\r\n    conditions.forEach((item, index) => {\r\n      conditions[index].column = this.colHeaders[conditionsStack[index].column];\r\n    });\r\n\r\n    this.filters = { filters: conditions };\r\n    let uri = new URI(Object.assign(this.order, this.filters));\r\n    var query = uri.string();\r\n\r\n    this.http.get(`/data${query}`).then((response) => {\r\n      this._loadData(response);\r\n    });\r\n  }\r\n\r\n  // move element in array from position to target\r\n  _move(array, from, to) {\r\n    if (to === from) {\r\n      return array;\r\n    }\r\n\r\n    var target = array[from];\r\n    var increment = to < from ? -1 : 1;\r\n\r\n    for (var k = from; k !== to; k += increment) {\r\n      array[k] = array[k + increment];\r\n    }\r\n    array[to] = target;\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The onAfterColumnMove method is called after moving column.\r\n   *\r\n   * @param {array} columns\r\n   * @param {number} target\r\n   */\r\n  onAfterColumnMove(columns, target) {\r\n    var columnNames = [];\r\n    var i = 0;\r\n    for (i = 0; i < columns.length; i++) {\r\n      columnNames.push(this.colHeaders[columns[i]]);\r\n    }\r\n\r\n    var colMoved = {\r\n      columnNames,\r\n      target\r\n    };\r\n\r\n    this.http.post('/aftercolumnmove', colMoved);\r\n  }\r\n\r\n  /**\r\n   * The onAfterCreateCol method is called after creating new column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateCol(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    var sourceIndex = index === 0 ? 1 : 0;\r\n    this.http.post('/aftercreatecol', payload)\r\n      .then((value) => {\r\n        this.hot.setCellMeta(row, index, 'row_id', this.hot.getCellMeta(row, sourceIndex).row_id);\r\n        this.hot.setCellMeta(row, index, 'col_id', value.name);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateRow(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    this.http.post('/aftercreaterow', payload)\r\n      .then((value) => {\r\n        var row = this.hot.getData()[index];\r\n        var sourceIndex = index === 1 ? 2 : 1;\r\n        for (var col = 0; col < row.length; col++) {\r\n          var column = this.hot.getCellMeta(sourceIndex, col).col_id;\r\n          this.hot.setCellMeta(index, col, 'row_id', value.id);\r\n          this.hot.setCellMeta(index, col, 'col_id', column);\r\n          this.hot.setDataAtCell(index, col, value.data[column]);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after sorting column, event will be passed to backend.\r\n   *\r\n   * @param {number} column\r\n   * @param {boolean} order\r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.order = order !== undefined ? { column: this.colHeaders[column], order } : {};\r\n\r\n    let uri = new URI(Object.assign(this.order, this.filters));\r\n    this.http.get(`/data${uri.string()}`)\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response\r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data;\r\n    let normalizedData = [];\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      let item = [];\r\n      // eslint-disable-next-line guard-for-in\r\n      for (let columnName in responseData[row]) {\r\n        item.push(responseData[row][columnName]);\r\n      }\r\n      normalizedData.push(item);\r\n    }\r\n\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = [];\r\n\r\n    // eslint-disable-next-line guard-for-in\r\n    for (let columnName in responseData[0]) {\r\n      columnNames.push(columnName);\r\n    }\r\n\r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, 'row_id', responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, 'col_id', columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after Handsontable instance initiation\r\n   */\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then((response) => {\r\n        this.hot.updateSettings(response.data);\r\n      });\r\n    this.http.get('/data')\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1]);\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta.instance;\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/afterchange', {\r\n        changes: changeItems,\r\n        source\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector;\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector);\r\n"],"sourceRoot":""}