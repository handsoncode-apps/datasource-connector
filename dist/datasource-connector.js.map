{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1cb1f1eb14bd0901949e","webpack:///./src/index.js","webpack:///./src/utils/http.js","webpack:///./src/utils/request.js"],"names":["DataSourceConnector","Handsontable","plugins","BasePlugin","constructor","hotInstance","http","colHeaders","filters","sort","isEnabled","enabled","hot","getSettings","dataSourceConnector","controllerUrl","onDataSend","undefined","addHook","defaultHeaders","requestHeaders","addListener","args","runHooks","enablePlugin","index","amount","onRemoveCol","onRemoveRow","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","rows","onRowMove","currentColumn","newSize","isDoubleClick","onRowResize","cellRange","mergeParent","auto","onMergeCell","onColumnResize","onUnmergeCells","row","col","key","value","onSetMeta","conditions","getPlugin","conditionCollection","exportAllConditions","forEach","item","uri","post","then","response","_loadData","_move","array","from","to","increment","k","columnNames","i","length","push","colMoved","data","payload","sourceIndex","put","noOfRows","getData","setCellMeta","getCellMeta","row_id","name","removedCol","delete","err","col_id","id","setDataAtCell","size","rowsRemoved","rowsMoved","currentRow","order","mergedParent","mergedCells","range","_normalizeRange","j","highlight","responseData","normalizedData","map","Object","values","loadData","keys","rowId","get","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","oldValue","newValue","meta","instance","destroy","registerPlugin","Http","listeners","callback","listener","setTimeout","url","request","method","body","JSON","stringify","parse","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","headers","setRequestHeader","onload","status","statusText","onerror","send","Request"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1cb1f1eb14bd0901949e","import Http from './utils/http';\r\n\r\n/**\r\n * @plugin DataSourceConnector\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * This plugin enable the backend side data management for handsontable instance\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance);\r\n    this.http = {};\r\n    this.colHeaders = [];\r\n    this.filters = [];\r\n    this.sort = {};\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector;\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      if (this.hot.getSettings().dataSourceConnector.onDataSend !== undefined) {\r\n        this.hot.addHook('onDataSend', this.hot.getSettings().dataSourceConnector.onDataSend);\r\n      }\r\n      this.http = new Http(controllerUrl);\r\n      this.http.defaultHeaders = this.hot.getSettings().dataSourceConnector.requestHeaders;\r\n      const hotInstance = this.hot;\r\n      this.http.addListener((...args) => {\r\n        if (hotInstance !== undefined) {\r\n          hotInstance.runHooks('onDataSend', args[0]);\r\n        }\r\n      });\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => false);\r\n    this.addHook('beforeFilter', () => false);\r\n    this.addHook('beforeRemoveCol', (index, amount) => this.onRemoveCol(index, amount));\r\n    this.addHook('beforeRemoveRow', (index, amount) => this.onRemoveRow(index, amount));\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, sort) => this.onAfterColumnSort(column, sort));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack));\r\n    this.addHook('beforeRowMove', (rows, target) => this.onRowMove(rows, target));\r\n    this.addHook('afterRowResize', (currentColumn, newSize, isDoubleClick) => this.onRowResize(currentColumn, newSize, isDoubleClick));\r\n    this.addHook('afterMergeCells', (cellRange, mergeParent, auto) => this.onMergeCell(cellRange, mergeParent, auto));\r\n    this.addHook('afterColumnResize', (currentColumn, newSize, isDoubleClick) => this.onColumnResize(currentColumn, newSize, isDoubleClick));\r\n    this.addHook('beforeUnmergeCells', (cellRange, auto) => this.onUnmergeCells(cellRange, auto));\r\n\r\n    this.addHook('afterSetCellMeta', (row, col, key, value) => this.onSetMeta(row, col, key, value));\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n  /**\r\n   * The onAfterFilter method is called after filtering.\r\n   *\r\n   * @param {array} conditionsStack\r\n   */\r\n  onAfterFilter(conditionsStack) {\r\n    let conditions = hot.getPlugin('filters').conditionCollection.exportAllConditions();\r\n    conditions.forEach((item, index) => {\r\n      conditions[index].column = this.colHeaders[conditionsStack[index].column];\r\n    });\r\n\r\n    this.filters = conditions;\r\n    let uri = { sort: this.sort, filters: this.filters};\r\n    this.http.post('/data', uri).then((response) => {\r\n      this._loadData(response);\r\n    });\r\n  }\r\n\r\n  // move element in array from position to target\r\n  _move(array, from, to) {\r\n    if (to === from) {\r\n      return array;\r\n    }\r\n\r\n    let target = array[from];\r\n    let increment = to < from ? -1 : 1;\r\n\r\n    for (let k = from; k !== to; k += increment) {\r\n      array[k] = array[k + increment];\r\n    }\r\n    array[to] = target;\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The onAfterColumnMove method is called after moving column.\r\n   *\r\n   * @param {array} columns\r\n   * @param {number} target\r\n   */\r\n  onAfterColumnMove(columns, target) {\r\n\r\n    let columnNames = [];\r\n    let i = 0;\r\n    for (i = 0; i < columns.length; i++) {\r\n      columnNames.push(this.colHeaders[columns[i]]);\r\n    }\r\n\r\n    let colMoved = {\r\n      columnNames,\r\n      target\r\n    };\r\n\r\n    this.http.post('/column/move', colMoved)\r\n      .then((value) => {\r\n        this.colHeaders = value.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The onAfterCreateCol method is called after creating new column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateCol(index, amount, source) {\r\n    let payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    let sourceIndex = index === 0 ? 1 : 0;\r\n    this.http.put('/column', payload)\r\n      .then((value) => {\r\n        let noOfRows = this.hot.getData().length;\r\n        for (let row = 0; row < noOfRows; row++) {\r\n          this.hot.setCellMeta(row, index, 'row_id', this.hot.getCellMeta(row, sourceIndex).row_id);\r\n          this.hot.setCellMeta(row, index, 'col_id', value.name);\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * The onAfterRemoveCol method is called after removing column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * */\r\n  async onRemoveCol(index, amount) {\r\n    let removedCol = [];\r\n    for (let i = 0; i < amount; i++) {\r\n      removedCol.push(this.colHeaders[i + index]);\r\n    }\r\n    try {\r\n      let value = await this.http.delete('/column', removedCol);\r\n      if (value.data) {\r\n        let response = await this.http.post('/data');\r\n        this._loadData(response);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateRow(index, amount, source) {\r\n    let payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    this.http.put('/row', payload)\r\n      .then((value) => {\r\n        let row = this.hot.getData()[index];\r\n        let sourceIndex = index === 1 ? 2 : 1;\r\n        for (let col = 0; col < row.length; col++) {\r\n          let column = this.hot.getCellMeta(sourceIndex, col).col_id;\r\n          this.hot.setCellMeta(index, col, 'row_id', value.id);\r\n          this.hot.setCellMeta(index, col, 'col_id', column);\r\n          this.hot.setDataAtCell(index, col, value.data[column]);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after resizing column.\r\n   *\r\n   * @param {number} currentColumn\r\n   * @param {number} newSize\r\n   * @param {boolean} isDoubleClick\r\n   */\r\n  onColumnResize(currentColumn, newSize) {\r\n    let uri = {\r\n      column: this.hot.getCellMeta(1, currentColumn).col_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/column/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   */\r\n  onRemoveRow(index, amount) {\r\n    let rowsRemoved = [];\r\n    for (let i = 0; i < amount; i++) {\r\n      rowsRemoved.push((this.hot.getCellMeta(i + index, 1).row_id));\r\n    }\r\n    this.http.delete('/row', rowsRemoved)\r\n      .then((value) => {\r\n        if (!value) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n  }\r\n\r\n  /**\r\n  * Method called after moving row.\r\n  *\r\n  * @param {array} rows\r\n  * @param {number} target\r\n  */\r\n  onRowMove(rows, target) {\r\n    let rowsMoved = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n      rowsMoved.push(this.hot.getCellMeta(rows[i], 1).row_id);\r\n    };\r\n    let payload = {\r\n      rowsMoved,\r\n      target\r\n    };\r\n    this.http.post('/row/move', payload);\r\n  }\r\n\r\n  /**\r\n   * Method called after resizing row, event will be passed to backend.\r\n   *\r\n   * @param {number} currentRow\r\n   * @param {number} newSize\r\n   */\r\n  onRowResize(currentRow, newSize) {\r\n    let uri = {\r\n      row: this.hot.getCellMeta(currentRow, 1).row_id,\r\n      size: newSize\r\n    };\r\n    this.http.post('/row/resize', uri);\r\n  }\r\n\r\n  /**\r\n   * Method called after sorting column, event will be passed to backend.\r\n   *\r\n   * @param {number} column\r\n   * @param {boolean} order\r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.sort = order !== undefined ? { column: this.colHeaders[column], order: order === true ? 'ASC' : 'DESC' } : {};\r\n\r\n    let uri = { sort: this.sort, filters: this.filters};\r\n    this.http.post('/data', uri)\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after merging cells, event will be passed to backend.\r\n   *\r\n   * @param {cellRange} CellRange\r\n   * @param {mergeParent} Object\r\n   * @param {auto} boolean\r\n   */\r\n  onMergeCell(cellRange, mergeParent) {\r\n    let mergedParent = {\r\n      column: this.hot.getCellMeta(mergeParent.row, mergeParent.col).col_id,\r\n      row: this.hot.getCellMeta(mergeParent.row, mergeParent.col).row_id\r\n    };\r\n    let mergedCells = [];\r\n\r\n    let range = this._normalizeRange(cellRange);\r\n\r\n    for (let i = range.from.row; i <= range.to.row; i++) {\r\n      for (let j = range.from.col; j <= range.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/merge', {\r\n      mergedParent,\r\n      mergedCells\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Normalize cell range\r\n   * @param {*} cellRange\r\n   */\r\n  _normalizeRange(cellRange) {\r\n    let from;\r\n    let to;\r\n    if (cellRange.from.row < cellRange.to.row) {\r\n      from = cellRange.from;\r\n      to = cellRange.to;\r\n    } else if (cellRange.from.row > cellRange.to.row) {\r\n      from = cellRange.to;\r\n      to = cellRange.from;\r\n    } else if (cellRange.from.row === cellRange.to.row) {\r\n      if (cellRange.from.col > cellRange.to.col) {\r\n        from = cellRange.to;\r\n        to = cellRange.from;\r\n      } else {\r\n        from = cellRange.from;\r\n        to = cellRange.to;\r\n      }\r\n    }\r\n    return {from, to};\r\n  }\r\n\r\n  onUnmergeCells(cellRange) {\r\n    let mergedParent = {\r\n      column: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).col_id,\r\n      row: this.hot.getCellMeta(cellRange.highlight.row, cellRange.highlight.col).row_id\r\n    };\r\n    let mergedCells = [];\r\n    for (let i = cellRange.from.row; i <= cellRange.to.row; i++) {\r\n      for (let j = cellRange.from.col; j <= cellRange.to.col; j++) {\r\n        mergedCells.push({column: this.hot.getCellMeta(i, j).col_id, row: this.hot.getCellMeta(i, j).row_id});\r\n      }\r\n    }\r\n    this.http.post('/cell/unmerge', {\r\n      mergedParent,\r\n      mergedCells\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response\r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data;\r\n    let normalizedData = responseData.map((value) => Object.values(value));\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = Object.keys(responseData[0]);\r\n\r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, 'row_id', responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, 'col_id', columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after Handsontable instance initiation\r\n   */\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then((response) => {\r\n        this.hot.updateSettings(response.data);\r\n      });\r\n    this.http.post('/data')\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n  * Called after cell meta is changed.\r\n  *\r\n  * @param {Number} row\r\n  * @param {Number} col\r\n  * @param {String} key\r\n  * @param {*} value\r\n  */\r\n  onSetMeta(row, col, key, value) {\r\n    if (key !== 'col_id' && key !== 'row_id') {\r\n      let uri = {row: this.hot.getCellMeta(row, col).row_id, column: this.hot.getCellMeta(row, col).col_id, key, value};\r\n      this.http.post('/cell/meta', uri);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1]);\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta.instance;\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/cell', {\r\n        changes: changeItems,\r\n        source\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector;\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Request from './request';\r\n\r\n/**\r\n * Send the xhr request to server\r\n *\r\n * @param {Request} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n  constructor(controllerUrl) {\r\n    this.controllerUrl = controllerUrl;\r\n    this.listeners = [];\r\n    this.defaultHeaders = {};\r\n  }\r\n\r\n  /**\r\n     * make a callback function that listen for HTTP events\r\n     *\r\n     * @param {function} callback\r\n     */\r\n  addListener(callback) {\r\n    if (typeof callback === 'function' || false) {\r\n      this.listeners.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * this method emit the onDataSend event to listeners\r\n     *\r\n     * @param {any} args\r\n     */\r\n  onDataSend(...args) {\r\n    if (this.listeners && this.listeners.length) {\r\n      this.listeners.forEach((listener) => {\r\n        setTimeout(() => { listener(...args); }, 5);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * make HTTP DELETE to url with payload data\r\n   *\r\n   * @param {string} url\r\n   * @param {any} data\r\n   */\r\n  delete(url, data) {\r\n    let request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'DELETE';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP PUT to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  put(url, data) {\r\n    let request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'PUT';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP POST to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  post(url, data) {\r\n    let request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'POST';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP GET call on url\r\n     *\r\n     * @param {string} url\r\n     */\r\n  get(url) {\r\n    let request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n    *\r\n    * @param {object} obj\r\n    */\r\n  request(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(obj.method || 'GET', obj.url);\r\n      if (obj.headers) {\r\n        Object.keys(obj.headers).forEach((key) => {\r\n          xhr.setRequestHeader(key, obj.headers[key]);\r\n        });\r\n      }\r\n      xhr.onload = () => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      };\r\n      xhr.onerror = () => reject(xhr.statusText);\r\n      xhr.send(obj.body);\r\n    });\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/http.js","/**\r\n * This class represents the http request call in xhr context\r\n */\r\nexport default class Request {\r\n  constructor(headers) {\r\n    this.url = '';\r\n    this.method = 'GET';\r\n    this.headers = headers !== undefined ? headers : { 'Content-Type': 'application/json' };\r\n    this.body = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/request.js"],"sourceRoot":""}