{"version":3,"sources":["webpack://Handsontable/webpack/universalModuleDefinition","webpack://Handsontable/webpack/bootstrap","webpack://Handsontable/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","dataSourceConnectorPlugin","hotInstance","Handsontable","plugins","BasePlugin","this","_superClass","vocabularyArray","create","constructor","writable","isEnabled","hot","getSettings","dataSourceConnector","afterInit","enablePlugin","addHook","onAfterInit","bind","onBeforeColumnSort","onAfterColumnSort","onAfterChange","onAfterRender","onAfterCreateRow","onAfterCreateCol","onAfterColumnMove","onBeforeFilter","onAfterFilter","data","colHeaders","disablePlugin","updatePlugin","_sendData","controllerUrl","endpoint","xhr","_xhr","open","setRequestHeader","send","JSON","stringify","_getData","url","successHandler","errorHandler","onreadystatechange","status","readyState","parse","responseText","XMLHttpRequest","e","ActiveXObject","changes","source","arrChanges","length","meta","getCellMeta","obj","row","row_id","column","col_id","oldValue","newValue","push","baseURL","response","updateSettings","res","key","rowId","columnName","console","log","loadData","columns","columnId","setCellMeta","isForced","order","params","query","slice","index","amount","createRow","createCol","target","colMoved","conditionsStack","queryArr","operator","getPlugin","conditionCollection","columnTypes","j","conditions","args","k","tempOperator","operatorWithVariable","join","newData","tempArr","destroy","registerPlugin"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Handsontable\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Handsontable\"] = factory();\n\telse\n\t\troot[\"Handsontable\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * @plugin\r\n *\r\n * @description\r\n * this plugin allow to connect the backend controller with your HandsOnTable instance.\r\n * All user data are automatically taken from backend, and events are published to backend. \r\n *\r\n * @param hotInstance\r\n * @constructor\r\n */\r\nfunction dataSourceConnectorPlugin(hotInstance) {\r\n  Handsontable.plugins.BasePlugin.call(this, hotInstance);\r\n  this._superClass = Handsontable.plugins.BasePlugin;\r\n\r\n  /**\r\n   * Array containing the vocabulary used in the plugin.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  this.vocabularyArray = [];\r\n}\r\n\r\ndataSourceConnectorPlugin.prototype = Object.create(\r\n  Handsontable.plugins.BasePlugin.prototype,\r\n  {\r\n    constructor: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: dataSourceConnectorPlugin\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * Check if the plugin is enabled in the settings.\r\n */\r\ndataSourceConnectorPlugin.prototype.isEnabled = function() {\r\n  return !!this.hot.getSettings().dataSourceConnector;\r\n};\r\n\r\ndataSourceConnectorPlugin.prototype.afterInit = false\r\n/**\r\n * Enable the plujgin.\r\n */\r\ndataSourceConnectorPlugin.prototype.enablePlugin = function() {\r\n  if (!this.afterInit) {\r\n    this.addHook(\"afterInit\", this.onAfterInit.bind(this));\r\n    this.addHook(\"beforeColumnSort\", this.onBeforeColumnSort.bind(this));\r\n    this.addHook(\"afterColumnSort\", this.onAfterColumnSort.bind(this));\r\n  }\r\n  this.addHook(\"afterChange\", this.onAfterChange.bind(this));\r\n  this.addHook(\"afterRender\", this.onAfterRender.bind(this));\r\n  this.addHook(\"afterCreateRow\", this.onAfterCreateRow.bind(this));\r\n  this.addHook(\"afterCreateCol\", this.onAfterCreateCol.bind(this));\r\n  this.addHook(\"afterColumnMove\", this.onAfterColumnMove.bind(this));\r\n  this.addHook(\"beforeFilter\", this.onBeforeFilter.bind(this))\r\n  this.addHook(\"afterFilter\", this.onAfterFilter.bind(this))\r\n  this._superClass.prototype.enablePlugin.call(this);\r\n\r\n};\r\n\r\ndataSourceConnectorPlugin.prototype.data = []\r\ndataSourceConnectorPlugin.prototype.colHeaders = []\r\n\r\n/**\r\n * Disable the plugin.\r\n */\r\ndataSourceConnectorPlugin.prototype.disablePlugin = function() {\r\n  this._superClass.prototype.disablePlugin.call(this);\r\n};\r\n\r\n/**\r\n * Update the plugin.\r\n */\r\ndataSourceConnectorPlugin.prototype.updatePlugin = function() {\r\n  this.disablePlugin();\r\n  this.enablePlugin();\r\n\r\n  this._superClass.prototype.updatePlugin.call(this);\r\n};\r\n\r\n/**\r\n * Post data to the controller side\r\n * \r\n * @param {*} controllerUrl \r\n * @param {*} endpoint \r\n * @param {*} data \r\n */\r\ndataSourceConnectorPlugin.prototype._sendData = function(\r\n  controllerUrl,\r\n  endpoint,\r\n  data\r\n) {\r\n  var xhr = dataSourceConnectorPlugin._xhr();\r\n  xhr.open(\"post\", controllerUrl + \"/\" + endpoint);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xhr.send(JSON.stringify(data));\r\n};\r\n\r\n/**\r\n * Get data from conroller\r\n * \r\n * @param {*} url \r\n * @param {*} successHandler \r\n * @param {*} errorHandler \r\n */\r\ndataSourceConnectorPlugin._getData = function(\r\n  url,\r\n  successHandler,\r\n  errorHandler\r\n) {\r\n  var xhr = dataSourceConnectorPlugin._xhr();\r\n  xhr.open(\"get\", url, true);\r\n  xhr.onreadystatechange = function() {\r\n    var status;\r\n    var data;\r\n    // https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate\r\n    if (xhr.readyState == 4) {\r\n      // `DONE`\r\n      status = xhr.status;\r\n      if (status == 200) {\r\n        data = JSON.parse(xhr.responseText);\r\n        successHandler && successHandler(data);\r\n      } else {\r\n        errorHandler && errorHandler(status);\r\n      }\r\n    }\r\n  };\r\n  xhr.send();\r\n};\r\n\r\n/** \r\n *  Itnitialize xhr based for different type of browser\r\n */\r\ndataSourceConnectorPlugin._xhr = function() {\r\n  try {\r\n    return new XMLHttpRequest();\r\n  } catch (e) {}\r\n  try {\r\n    return new ActiveXObject(\"Msxml3.XMLHTTP\");\r\n  } catch (e) {}\r\n  try {\r\n    return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n  } catch (e) {}\r\n  try {\r\n    return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n  } catch (e) {}\r\n  try {\r\n    return new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n  } catch (e) {}\r\n  try {\r\n    return new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n  } catch (e) {}\r\n  return null;\r\n};\r\n\r\n/**\r\n * The afterChange hook callback.\r\n *\r\n * @param {Array} changes Array of changes.\r\n * @param {String} source Describes the source of the change.\r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterChange = function(changes, source) {\r\n  if (changes) {   \r\n    var arrChanges = [];\r\n    for (var i = 0; i < changes.length; i++) {\r\n      var meta = this.hot.getCellMeta(changes[i][0], changes[i][1])\r\n      var obj = {\r\n        row: meta.row_id,\r\n        column: meta.col_id,\r\n        oldValue: changes[i][2],\r\n        newValue: changes[i][3],\r\n        meta: meta\r\n      };\r\n      delete obj.meta[\"instance\"];\r\n      arrChanges.push(obj);\r\n\r\n    }\r\n\r\n    var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n    this._sendData(controllerUrl, \"afterchange\", {\r\n      changes: arrChanges,\r\n      source: source\r\n    });\r\n  }\r\n};\r\n\r\ndataSourceConnectorPlugin.prototype.onAfterInit = function() {\r\n  var baseURL = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n  dataSourceConnectorPlugin._getData(baseURL + \"/settings\", response => {\r\n    this.hot.updateSettings(response.data)\r\n  })\r\n  dataSourceConnectorPlugin._getData(baseURL + \"/data\", response => {\r\n    var res = response.data\r\n    for (var key in res[0]) {\r\n     this.colHeaders.push(key)\r\n    }\r\n    this.hot.updateSettings({\r\n      colHeaders: this.colHeaders\r\n    })\r\n    var data = []\r\n    for (var rowId = 0; rowId < res.length; rowId++) {\r\n      var row =[]\r\n      for (var columnName in res[rowId]) {\r\n        row.push(res[rowId][columnName])\r\n      }\r\n\r\n      data.push(row)\r\n    }\r\n    \r\n      // var row =[]\r\n      // for (var columnName in res[0]) {\r\n      //   row.push(columnName)\r\n      // }\r\n      // data.push(row)\r\n    \r\n      console.log('get data', data)\r\n\r\n\r\n    this.hot.loadData(data);\r\n\r\n    var columns = []\r\n    for (var columnName in res[0]) {\r\n      columns.push(columnName)\r\n    }\r\n    for (var rowId = 0; rowId < res.length; rowId++) {\r\n      for (var columnId = 0 ; columnId < columns.length; columnId++) {\r\n        this.hot.setCellMeta(rowId, columnId, \"row_id\", res[rowId][response.rowId]);\r\n        this.hot.setCellMeta(rowId, columnId, \"col_id\", columns[columnId]);\r\n      }\r\n    }\r\n    this.afterInit = true\r\n  })}\r\n/**\r\n * On after render event handler\r\n * \r\n * @param {*} isForced\r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterRender = function(isForced) {};\r\n\r\n// Prevent sorting on front-end side\r\ndataSourceConnectorPlugin.prototype.onBeforeColumnSort = function(\r\n  column,\r\n  order\r\n) {\r\n  return false\r\n};\r\n\r\n/**\r\n * On after Column Sort event handler\r\n * \r\n * @param {*} column \r\n * @param {*} order \r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterColumnSort = function(\r\n  column,\r\n  order\r\n) {\r\n  var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n  var params = { column: this.colHeaders[column], order: order }\r\n  var query = '?'\r\n  for (var key in params) {\r\n   query += key + \"=\" + params[key] + \"&\"\r\n  }\r\n  query = query.slice(0, -1)\r\n\r\n  dataSourceConnectorPlugin._getData(controllerUrl + \"/aftercolumnsort\" + query, response => {\r\n    data = response.data\r\n    this.hot.loadData(data)\r\n    return false;\r\n  })\r\n  return false;\r\n};\r\n\r\n/**\r\n * On after Create row event hanlder\r\n * \r\n * @param {*} index \r\n * @param {*} amount \r\n * @param {*} source \r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterCreateRow = function(\r\n  index,\r\n  amount,\r\n  source\r\n) {\r\n  var createRow = {\r\n    index: index,\r\n    amount: amount,\r\n    source: source\r\n  };\r\n  var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n  this._sendData(controllerUrl, \"aftercreaterow\", createRow);\r\n};\r\n\r\n/**\r\n * On after create event handler\r\n * \r\n * @param {*} index \r\n * @param {*} amount \r\n * @param {*} source \r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterCreateCol = function(\r\n  index,\r\n  amount,\r\n  source\r\n) {\r\n  var createCol = {\r\n    index: index,\r\n    amount: amount,\r\n    source: source\r\n  };\r\n  var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n  this._sendData(controllerUrl, \"aftercreatecol\", createCol);\r\n};\r\n\r\n/**\r\n * On after column move handler\r\n * \r\n * @param {*} columns \r\n * @param {*} target \r\n */\r\ndataSourceConnectorPlugin.prototype.onAfterColumnMove = function(\r\n  columns,\r\n  target\r\n) {\r\n  var colMoved = {\r\n    columns: columns,\r\n    target: target\r\n  };\r\n  var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n  this._sendData(controllerUrl, \"aftercolumnmove\", colMoved);\r\n};\r\n\r\n\r\ndataSourceConnectorPlugin.prototype.onBeforeFilter = function(\r\n  conditionsStack\r\n) {\r\n  return false;\r\n}\r\n\r\ndataSourceConnectorPlugin.prototype.onAfterFilter = function(\r\n  conditionsStack\r\n) {\r\n  var queryArr = []\r\n  if (conditionsStack.length > 0) {\r\n    for (var i = 0; i < conditionsStack.length; i ++) {\r\n      operator = this.hot.getPlugin('filters').conditionCollection.columnTypes[conditionsStack[i].column]\r\n      switch(operator) {\r\n        case 'conjunction':\r\n          operator = ['and']\r\n          break;\r\n        case 'disjunction':\r\n          operator = ['or']\r\n          break;\r\n        case 'disjunctionAndVariable':\r\n          operator = ['or', 'and']\r\n          break;\r\n      }\r\n      for (let j = 0; j < conditionsStack[i].conditions.length; j++) {\r\n        if (operator[j]) {\r\n          conditionsStack[i].conditions[j].operator = operator[j]\r\n        }\r\n        if (conditionsStack[i].conditions[j].args.length != 0) {\r\n          if (typeof conditionsStack[i].conditions[j].args[0] === 'string') {\r\n            queryArr.push(\"[\" + this.colHeaders[conditionsStack[i].column] + \"][\" + conditionsStack[i].conditions[j].name + \"]=\" + conditionsStack[i].conditions[j].args[0])\r\n          } else {\r\n            for (let k = 0; k < conditionsStack[i].conditions[j].args[0].length; k++) {\r\n              queryArr.push(\"[\" + this.colHeaders[conditionsStack[i].column] + \"][\" + conditionsStack[i].conditions[j].name + \"]=\" + conditionsStack[i].conditions[j].args[0][k])\r\n            }\r\n          }\r\n        } else {\r\n          queryArr.push(\"[\" + this.colHeaders[conditionsStack[0].column] + \"][\" + conditionsStack[i].conditions[j].name + \"]=true\")\r\n        }\r\n        if (j < conditionsStack[i].conditions.length - 1) {\r\n          tempOperator = conditionsStack[i].conditions[j].operator || 'and'\r\n          queryArr.push(\"[\" + this.colHeaders[conditionsStack[i].column] + \"][operator]=\" + tempOperator)\r\n        }\r\n      }\r\n      operatorWithVariable = false\r\n    }\r\n    var query = \"?\" + queryArr.join('&')\r\n    var controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n    dataSourceConnectorPlugin._getData(controllerUrl + \"/afterfilter\" + query, response => {\r\n      var data = response.data\r\n      var newData = []\r\n      for (var i = 0; i < data.length; i++) {\r\n        var tempArr = []\r\n        for (var key in data[i]) {\r\n          tempArr.push(data[i][key])\r\n        }\r\n        newData.push(tempArr)\r\n      }\r\n      this.hot.loadData(newData)\r\n    })  \r\n  }\r\n}\r\n\r\n/**\r\n * Destroy the plugin.\r\n */\r\ndataSourceConnectorPlugin.prototype.destroy = function() {\r\n  this._superClass.prototype.destroy.call(this);\r\n};\r\n\r\nHandsontable.plugins.registerPlugin(\r\n  \"dataSourceConnectorPlugin\",\r\n  dataSourceConnectorPlugin\r\n);\r\n"],"sourceRoot":""}