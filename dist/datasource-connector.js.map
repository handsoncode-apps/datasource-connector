{"version":3,"sources":["webpack://DatasourceConector/webpack/universalModuleDefinition","webpack://DatasourceConector/webpack/bootstrap","webpack://DatasourceConector/./src/utils/uri.js","webpack://DatasourceConector/./src/utils/request.js","webpack://DatasourceConector/./src/utils/http.js","webpack://DatasourceConector/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","URI","constructor","this","_serialie","prefix","queryStrings","key","push","encodeURIComponent","join","string","undefined","Request","url","method","headers","Content-Type","body","http_Http","controllerUrl","listeners","Map","addListener","callback","onDataSend","args","length","forEach","listener","post","data","request","JSON","stringify","then","reqest","response","parse","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","keys","setRequestHeader","onload","status","statusText","onerror","send","src_DataSourceConnector","Handsontable","plugins","BasePlugin","hotInstance","super","http","colHeaders","filters","order","isEnabled","enabled","hot","getSettings","dataSourceConnector","enablePlugin","addHook","isForced","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","index","amount","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","item","array","query","assign","_loadData","colMoved","payload","uri","responseData","normalizedData","row","columnName","loadData","columnNames","setCellMeta","rowId","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","getCellMeta","row_id","col_id","oldValue","newValue","meta","destroy","__webpack_exports__","registerPlugin"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class URI {\r\n    constructor(object) {\r\n        this.object = object;\r\n    }\r\n\r\n    _serialie(object, prefix) {\r\n        let queryStrings = [], property;\r\n        for (property in object) {\r\n            if (object.hasOwnProperty(property)) {\r\n                let key = prefix ? prefix + '[' + property + ']' : property;\r\n                let value = object[property];\r\n                queryStrings.push((value !== null && typeof value === 'object') ? this._serialie(value, key) : encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            }\r\n        }\r\n        return queryStrings.join('&');\r\n    }\r\n\r\n    string() {\r\n        if (this.object === undefined) {\r\n            return '';\r\n        }\r\n        return '?' + this._serialie(this.object)\r\n    }\r\n}","export default class Request {\r\n    constructor() {\r\n      this.url = '';\r\n      this.method = 'GET';\r\n      this.headers = { 'Content-Type': 'application/json' };\r\n      this.body = {};\r\n    }\r\n  }","import Request from './request'\r\n\r\n/**\r\n * Send the xhr request to server \r\n * \r\n * @param {Reqest} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n    constructor(controllerUrl) {\r\n        this.controllerUrl = controllerUrl;\r\n        this.listeners = new Map();\r\n    }\r\n\r\n    addListener(callback) {\r\n        if (typeof callback === 'function' || false) {\r\n            this.listeners.push(callback);\r\n        }\r\n    }\r\n\r\n    onDataSend(...args){\r\n        if (this.listeners && this.listeners.length) {\r\n            this.listeners.forEach((listener) => {\r\n                listener(...args); \r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * make HTTP POST to url with payload data\r\n     * \r\n     * @param {string} url \r\n     * @param {any} data \r\n     */\r\n    post(url, data) {\r\n\r\n        let request = new Request();\r\n        request.url = this.controllerUrl + url;\r\n        request.method = 'POST';\r\n        request.body = JSON.stringify(data);\r\n\r\n        return this.request(request).then(\r\n            value => {\r\n                this.onDataSend({ reqest: request, response: JSON.parse(value) });\r\n                return JSON.parse(value);\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * make HTTP GET call on url\r\n     * \r\n     * @param {string} url \r\n     */\r\n    get(url) {\r\n        var request = new Request();\r\n        request.url = this.controllerUrl + url;\r\n\r\n        return this.request(request).then(\r\n            value => {\r\n                this.onDataSend({ reqest: request, response: JSON.parse(value) });\r\n                return JSON.parse(value);\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {object} obj \r\n     */\r\n    request(obj) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(obj.method || \"GET\", obj.url);\r\n            if (obj.headers) {\r\n                Object.keys(obj.headers).forEach(key => {\r\n                    xhr.setRequestHeader(key, obj.headers[key]);\r\n                });\r\n            }\r\n            xhr.onload = () => {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(xhr.response);\r\n                } else {\r\n                    reject(xhr.statusText);\r\n                }\r\n            };\r\n            xhr.onerror = () => reject(xhr.statusText);\r\n            xhr.send(obj.body);\r\n        });\r\n    };\r\n\r\n\r\n}","import URI from './utils/uri'\r\nimport Http from './utils/http'\r\n\r\n/**\r\n * @plugin InternalPluginSkeleton\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * Blank plugin template. It needs to inherit from the BasePlugin class.\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance)\r\n    this.http = {}\r\n    this.colHeaders = []\r\n    this.filters = {}\r\n    this.order = {}\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      let onDataSend = this.hot.getSettings().dataSourceConnector.onDataSend;\r\n      this.http = new Http(controllerUrl);\r\n      this.http.addListener(onDataSend);\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => { return false; });\r\n    this.addHook('beforeFilter', () => { return false; })\r\n    this.addHook('afterRender', (isForced) => { });\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, order) => this.onAfterColumnSort(column, order));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack))\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n\r\n  onAfterFilter(conditionsStack) {\r\n    conditionsStack.forEach((item, index, array) => {\r\n      array[index].column = this.colHeaders[index]\r\n    })\r\n    this.filters = {filters:conditionsStack};\r\n    let uri = new URI(Object.assign(this.order, this.filters));\r\n    var query = uri.string();\r\n    \r\n    this.http.get('/data' + query).then(response => {\r\n      this._loadData(response)\r\n    })\r\n  }\r\n\r\n  onAfterColumnMove(columns, target) {\r\n    var colMoved = {\r\n      columns: columns,\r\n      target: target\r\n    };\r\n    this.http.post('/aftercolumnmove', colMoved);\r\n  }\r\n\r\n  onAfterCreateCol(index, amount, source) {\r\n    var payload = {\r\n      index: index,\r\n      amount: amount,\r\n      source: source\r\n    };\r\n    this.http.post('/aftercreatecol', payload).then(value => {\r\n      // TODO: setup meta for new created col\r\n      return value;\r\n    });\r\n  }\r\n\r\n  onAfterCreateRow(index, amount, source) {\r\n    var payload = {\r\n      index: index,\r\n      amount: amount,\r\n      source: source\r\n    };\r\n    this.http.post('/aftercreaterow', payload).then(value => {\r\n      // TODO: setup meta for new created row\r\n      return value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} column \r\n   * @param {*} order \r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.order = order !== undefined ? { column: this.colHeaders[column], order: order } : {};\r\n    \r\n    let uri = new URI(Object.assign(this.order, this.filters));\r\n    this.http.get(\"/data\" + uri.string())\r\n      .then(response => {\r\n        this._loadData(response)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response \r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data\r\n    let normalizedData = []\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      let item = []\r\n      for (let columnName in responseData[row]) {\r\n        item.push(responseData[row][columnName])\r\n      }\r\n      normalizedData.push(item)\r\n    }\r\n\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = []\r\n    for (let columnName in responseData[0]) {\r\n      columnNames.push(columnName)\r\n    }\r\n    \r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, \"row_id\", responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, \"col_id\", columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then(response => {\r\n        this.hot.updateSettings(response.data)\r\n      })\r\n    this.http.get('/data')\r\n      .then(response => {\r\n        this._loadData(response)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1])\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta[\"instance\"];\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/afterchange', {\r\n        changes: changeItems,\r\n        source: source\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector)"],"sourceRoot":""}