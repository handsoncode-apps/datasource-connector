{"version":3,"sources":["webpack://DatasourceConector/webpack/universalModuleDefinition","webpack://DatasourceConector/webpack/bootstrap","webpack://DatasourceConector/./src/utils/request.js","webpack://DatasourceConector/./src/utils/http.js","webpack://DatasourceConector/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Request","constructor","headers","this","url","method","undefined","Content-Type","body","http_Http","controllerUrl","listeners","defaultHeaders","addListener","callback","push","onDataSend","args","length","forEach","listener","post","data","request","JSON","stringify","then","response","parse","obj","Promise","resolve","reject","xhr","XMLHttpRequest","open","keys","key","setRequestHeader","onload","status","statusText","onerror","send","src_DataSourceConnector","Handsontable","plugins","BasePlugin","hotInstance","super","http","colHeaders","filters","order","isEnabled","enabled","hot","getSettings","dataSourceConnector","addHook","requestHeaders","runHooks","enablePlugin","index","amount","onRemoveCol","onRemoveRow","onAfterInit","changes","source","onAfterChange","column","onAfterColumnSort","onAfterCreateRow","onAfterCreateCol","columns","target","onAfterColumnMove","conditionsStack","onAfterFilter","rows","onRowMove","conditions","getPlugin","conditionCollection","exportAllConditions","item","uri","_loadData","_move","array","from","to","increment","k","columnNames","colMoved","payload","sourceIndex","noOfRows","getData","row","setCellMeta","getCellMeta","row_id","[object Object]","removedCol","err","col","col_id","id","setDataAtCell","rowsRemoved","rowsMoved","responseData","normalizedData","columnName","loadData","rowId","updateSettings","disablePlugin","updatePlugin","changeItems","cellMeta","oldValue","newValue","meta","instance","destroy","__webpack_exports__","registerPlugin"],"mappings":"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","file":"datasource-connector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DatasourceConector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DatasourceConector\"] = factory();\n\telse\n\t\troot[\"DatasourceConector\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * This class represents the http request call in xhr context\r\n */\r\nexport default class Request {\r\n  constructor(headers) {\r\n    this.url = '';\r\n    this.method = 'GET';\r\n    this.headers = headers !== undefined ? headers : { 'Content-Type': 'application/json' };\r\n    this.body = '';\r\n  }\r\n}\r\n","import Request from './request';\r\n\r\n/**\r\n * Send the xhr request to server\r\n *\r\n * @param {Request} obj Request object\r\n * @returns {Promise}\r\n */\r\nexport default class Http {\r\n\r\n  constructor(controllerUrl) {\r\n    this.controllerUrl = controllerUrl;\r\n    this.listeners = [];\r\n    this.defaultHeaders = {};\r\n  }\r\n\r\n  /**\r\n     * make a callback function that listen for HTTP events\r\n     *\r\n     * @param {function} callback\r\n     */\r\n  addListener(callback) {\r\n    if (typeof callback === 'function' || false) {\r\n      this.listeners.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * this method emit the onDataSend event to listeners\r\n     *\r\n     * @param {any} args\r\n     */\r\n  onDataSend(...args) {\r\n    if (this.listeners && this.listeners.length) {\r\n      this.listeners.forEach((listener) => {\r\n        listener(...args);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n     * make HTTP POST to url with payload data\r\n     *\r\n     * @param {string} url\r\n     * @param {any} data\r\n     */\r\n  post(url, data) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n    request.method = 'POST';\r\n    request.body = JSON.stringify(data);\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n     * make HTTP GET call on url\r\n     *\r\n     * @param {string} url\r\n     */\r\n  get(url) {\r\n    var request = new Request(this.defaultHeaders);\r\n    request.url = this.controllerUrl + url;\r\n\r\n    return this.request(request).then(\r\n      (value) => {\r\n        this.onDataSend({ request, response: JSON.parse(value) });\r\n        return JSON.parse(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n    *\r\n    * @param {object} obj\r\n    */\r\n  request(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(obj.method || 'GET', obj.url);\r\n      if (obj.headers) {\r\n        Object.keys(obj.headers).forEach((key) => {\r\n          xhr.setRequestHeader(key, obj.headers[key]);\r\n        });\r\n      }\r\n      xhr.onload = () => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      };\r\n      xhr.onerror = () => reject(xhr.statusText);\r\n      xhr.send(obj.body);\r\n    });\r\n  };\r\n}\r\n","import Http from './utils/http';\r\n\r\n/**\r\n * @plugin DataSourceConnector\r\n * Note: keep in mind, that Handsontable instance creates one instance of the plugin class.\r\n *\r\n * @description\r\n * This plugin enable the backend side data management for handsontable instance\r\n */\r\nclass DataSourceConnector extends Handsontable.plugins.BasePlugin {\r\n\r\n  // The argument passed to the constructor is the currently processed Handsontable instance object.\r\n  constructor(hotInstance) {\r\n    super(hotInstance);\r\n    this.http = {};\r\n    this.colHeaders = [];\r\n    this.filters = [];\r\n    this.order = {};\r\n  }\r\n\r\n  /**\r\n   * Checks if the plugin is enabled in the settings.\r\n   */\r\n  isEnabled() {\r\n    let enabled = !!this.hot.getSettings().dataSourceConnector;\r\n    if (enabled) {\r\n      let controllerUrl = this.hot.getSettings().dataSourceConnector.controllerUrl;\r\n      this.hot.addHook('onDataSend', this.hot.getSettings().dataSourceConnector.onDataSend);\r\n      this.http = new Http(controllerUrl);\r\n      this.http.defaultHeaders = this.hot.getSettings().dataSourceConnector.requestHeaders;\r\n      this.http.addListener((...args) => {\r\n        this.hot.runHooks('onDataSend', args[0]);\r\n      });\r\n    }\r\n    return enabled;\r\n  }\r\n\r\n  /**\r\n   * The enablePlugin method is triggered on the beforeInit hook. It should contain your initial plugin setup, along with\r\n   * the hook connections.\r\n   * Note, that this method is run only if the statement in the isEnabled method is true.\r\n   */\r\n  enablePlugin() {\r\n    // disable build in sort and filter functions\r\n    this.addHook('beforeColumnSort', () => false);\r\n    this.addHook('beforeFilter', () => false);\r\n    this.addHook('beforeRemoveCol', (index, amount) => this.onRemoveCol(index, amount));\r\n    this.addHook('beforeRemoveRow', (index, amount) => this.onRemoveRow(index, amount));\r\n\r\n    this.addHook('afterInit', () => this.onAfterInit());\r\n    this.addHook('afterChange', (changes, source) => this.onAfterChange(changes, source));\r\n    this.addHook('afterColumnSort', (column, order) => this.onAfterColumnSort(column, order));\r\n\r\n    this.addHook('afterCreateRow', (index, amount, source) => this.onAfterCreateRow(index, amount, source));\r\n    this.addHook('afterCreateCol', (index, amount, source) => this.onAfterCreateCol(index, amount, source));\r\n    this.addHook('afterColumnMove', (columns, target) => this.onAfterColumnMove(columns, target));\r\n    this.addHook('afterFilter', (conditionsStack) => this.onAfterFilter(conditionsStack));\r\n    this.addHook('beforeRowMove', (rows, target) => this.onRowMove(rows, target));\r\n\r\n    // The super method assigns the this.enabled property to true, which can be later used to check if plugin is already enabled.\r\n    super.enablePlugin();\r\n  }\r\n  /**\r\n   * The onAfterFilter method is called after filtering.\r\n   *\r\n   * @param {array} conditionsStack\r\n   */\r\n  onAfterFilter(conditionsStack) {\r\n    var conditions = hot.getPlugin('filters').conditionCollection.exportAllConditions();\r\n    conditions.forEach((item, index) => {\r\n      conditions[index].column = this.colHeaders[conditionsStack[index].column];\r\n    });\r\n\r\n    this.filters = conditions;\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri).then((response) => {\r\n      this._loadData(response);\r\n    });\r\n  }\r\n\r\n  // move element in array from position to target\r\n  _move(array, from, to) {\r\n    if (to === from) {\r\n      return array;\r\n    }\r\n\r\n    var target = array[from];\r\n    var increment = to < from ? -1 : 1;\r\n\r\n    for (var k = from; k !== to; k += increment) {\r\n      array[k] = array[k + increment];\r\n    }\r\n    array[to] = target;\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * The onAfterColumnMove method is called after moving column.\r\n   *\r\n   * @param {array} columns\r\n   * @param {number} target\r\n   */\r\n  onAfterColumnMove(columns, target) {\r\n    var columnNames = [];\r\n    var i = 0;\r\n    for (i = 0; i < columns.length; i++) {\r\n      columnNames.push(this.colHeaders[columns[i]]);\r\n    }\r\n\r\n    var colMoved = {\r\n      columnNames,\r\n      target\r\n    };\r\n\r\n    this.http.post('/move/column', colMoved)\r\n      .then((value) => {\r\n        this.colHeaders = value.data;\r\n        // hot.updateSettings({colHeaders: value.data});\r\n        // console.log(hot.getSettings());\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The onAfterCreateCol method is called after creating new column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateCol(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    var sourceIndex = index === 0 ? 1 : 0;\r\n    this.http.post('/create/column', payload)\r\n      .then((value) => {\r\n        var noOfRows = this.hot.getData().length;\r\n        for (var row = 0; row < noOfRows; row++) {\r\n          this.hot.setCellMeta(row, index, 'row_id', this.hot.getCellMeta(row, sourceIndex).row_id);\r\n          this.hot.setCellMeta(row, index, 'col_id', value.name);\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * The onAfterRemoveCol method is called after removing column.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * */\r\n  async onRemoveCol(index, amount) {\r\n    var removedCol = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      removedCol.push(this.colHeaders[i + index]);\r\n    }\r\n    try {\r\n      var value = await this.http.post('/remove/column', removedCol);\r\n      if (value.data) {\r\n        var response = await this.http.post('/data');\r\n        this._loadData(response);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   * @param {string} source\r\n   */\r\n  onAfterCreateRow(index, amount, source) {\r\n    var payload = {\r\n      index,\r\n      amount,\r\n      source\r\n    };\r\n    this.http.post('/create/row', payload)\r\n      .then((value) => {\r\n        var row = this.hot.getData()[index];\r\n        var sourceIndex = index === 1 ? 2 : 1;\r\n        for (var col = 0; col < row.length; col++) {\r\n          var column = this.hot.getCellMeta(sourceIndex, col).col_id;\r\n          this.hot.setCellMeta(index, col, 'row_id', value.id);\r\n          this.hot.setCellMeta(index, col, 'col_id', column);\r\n          this.hot.setDataAtCell(index, col, value.data[column]);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called after creating new row.\r\n   *\r\n   * @param {number} index\r\n   * @param {number} amount\r\n   */\r\n  onRemoveRow(index, amount) {\r\n    var rowsRemoved = [];\r\n    for (var i = 0; i < amount; i++) {\r\n      rowsRemoved.push((this.hot.getCellMeta(i + index, 1).row_id));\r\n    }\r\n    this.http.post('/remove/row', rowsRemoved)\r\n      .then((value) => {\r\n        if (!value) {\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n  * Method called after moving row.\r\n  *\r\n  * @param {array} rows\r\n  * @param {number} target\r\n  */\r\n  onRowMove(rows, target) {\r\n    var rowsMoved = [];\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rowsMoved.push(this.hot.getCellMeta(rows[i], 1).row_id);\r\n    };\r\n    var payload = {\r\n      rowsMoved,\r\n      target\r\n    };\r\n    this.http.post('/move/row', payload);\r\n  }\r\n\r\n  /**\r\n   * Method called after sorting column, event will be passed to backend.\r\n   *\r\n   * @param {number} column\r\n   * @param {boolean} order\r\n   */\r\n  onAfterColumnSort(column, order) {\r\n    this.order = order !== undefined ? { column: this.colHeaders[column], order: order === true ? 'ASC' : 'DESC' } : {};\r\n\r\n    let uri = { order: this.order, filters: this.filters};\r\n    this.http.post('/data', uri)\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load data and setup all dedicated metadata for backend sync\r\n   * @param {object} response\r\n   */\r\n  _loadData(response) {\r\n    let responseData = response.data;\r\n    let normalizedData = [];\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      let item = [];\r\n      // eslint-disable-next-line guard-for-in\r\n      for (let columnName in responseData[row]) {\r\n        item.push(responseData[row][columnName]);\r\n      }\r\n      normalizedData.push(item);\r\n    }\r\n\r\n    this.hot.loadData(normalizedData);\r\n\r\n    let columnNames = [];\r\n\r\n    // eslint-disable-next-line guard-for-in\r\n    for (let columnName in responseData[0]) {\r\n      columnNames.push(columnName);\r\n    }\r\n\r\n    this.colHeaders = columnNames;\r\n\r\n    for (let row = 0; row < responseData.length; row++) {\r\n      for (let column = 0; column < columnNames.length; column++) {\r\n        this.hot.setCellMeta(row, column, 'row_id', responseData[row][response.rowId]);\r\n        this.hot.setCellMeta(row, column, 'col_id', columnNames[column]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method called after Handsontable instance initiation\r\n   */\r\n  onAfterInit() {\r\n    this.http.get('/settings')\r\n      .then((response) => {\r\n        this.hot.updateSettings(response.data);\r\n      });\r\n    this.http.post('/data')\r\n      .then((response) => {\r\n        this._loadData(response);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The disablePlugin method is used to disable the plugin. Reset all of your classes properties to their default values here.\r\n   */\r\n  disablePlugin() {\r\n    // The super method takes care of clearing the hook connections and assigning the 'false' value to the 'this.enabled' property.\r\n    super.disablePlugin();\r\n  }\r\n\r\n  /**\r\n   * The updatePlugin method is called on the afterUpdateSettings hook (unless the updateSettings method turned the plugin off).\r\n   * It should contain all the stuff your plugin needs to do to work properly after the Handsontable instance settings were modified.\r\n   */\r\n  updatePlugin() {\r\n\r\n    // The updatePlugin method needs to contain all the code needed to properly re-enable the plugin. In most cases simply disabling and enabling the plugin should do the trick.\r\n    this.disablePlugin();\r\n    this.enablePlugin();\r\n\r\n    super.updatePlugin();\r\n  }\r\n\r\n  /**\r\n   * The afterChange hook callback.\r\n   *\r\n   * @param {Array} changes Array of changes.\r\n   * @param {String} source Describes the source of the change.\r\n   */\r\n  onAfterChange(changes, source) {\r\n    if (changes) {\r\n      let changeItems = [];\r\n      for (let i = 0; i < changes.length; i++) {\r\n        let cellMeta = this.hot.getCellMeta(changes[i][0], changes[i][1]);\r\n        let item = {\r\n          row: cellMeta.row_id,\r\n          column: cellMeta.col_id,\r\n          oldValue: changes[i][2],\r\n          newValue: changes[i][3],\r\n          meta: cellMeta\r\n        };\r\n        delete item.meta.instance;\r\n        changeItems.push(item);\r\n      }\r\n      this.http.post('/update', {\r\n        changes: changeItems,\r\n        source\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The destroy method should de-assign all of your properties.\r\n   */\r\n  destroy() {\r\n    // The super method takes care of de-assigning the event callbacks, plugin hooks and clearing all the plugin properties.\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default DataSourceConnector;\r\n\r\n// register plugin\r\nHandsontable.plugins.registerPlugin('DataSourceConnector', DataSourceConnector);\r\n"],"sourceRoot":""}