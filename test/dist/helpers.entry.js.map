{"version":3,"file":"helpers.entry.js","sources":["webpack:///webpack/bootstrap 9ee26e32555a040a4272","webpack:///test/helpers/index.js","webpack:///external \"window\"","webpack:///test/helpers/jasmine.js","webpack:///test/helpers/common.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 126);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9ee26e32555a040a4272","/* eslint-disable import/no-unresolved */\nimport window from 'window';\nimport * as common from './common';\nimport * as jasmine from './jasmine';\n\nconst exportToWindow = (helpersHolder) => {\n  Object.keys(helpersHolder).forEach((key) => {\n    if (key === '__esModule') {\n      return;\n    }\n\n    if (window[key] !== void 0) {\n      throw Error(`Cannot export \"${key}\" helper because this name is already assigned.`);\n    }\n\n    window[key] = helpersHolder[key];\n  });\n};\n\n// Export all helpers to the window.\nexportToWindow(common);\nexportToWindow(jasmine);\n\n\n\n// WEBPACK FOOTER //\n// test/helpers/index.js","module.exports = window;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"window\"\n// module id = 127\n// module chunks = 1","/* eslint-disable import/prefer-default-export */\nvar currentSpec;\n\nexport function spec() {\n  return currentSpec;\n};\n\nfunction hot() {\n  return spec().$container.data('handsontable');\n};\n\n// http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\nconst scrollbarWidth = (function calculateScrollbarWidth() {\n  const inner = document.createElement('div');\n\n  inner.style.height = '200px';\n  inner.style.width = '100%';\n\n  const outer = document.createElement('div');\n\n  outer.style.boxSizing = 'content-box';\n  outer.style.height = '150px';\n  outer.style.left = '0px';\n  outer.style.overflow = 'hidden';\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.width = '200px';\n  outer.style.visibility = 'hidden';\n  outer.appendChild(inner);\n\n  (document.body || document.documentElement).appendChild(outer);\n  const w1 = inner.offsetWidth;\n\n  outer.style.overflow = 'scroll';\n\n  let w2 = inner.offsetWidth;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  (document.body || document.documentElement).removeChild(outer);\n\n  return (w1 - w2);\n}());\n\nbeforeEach(function() {\n  currentSpec = this;\n\n  var matchers = {\n    toBeInArray() {\n      return {\n        compare(actual, expected) {\n          return {\n            pass: Array.isArray(expected) && expected.indexOf(actual) > -1\n          };\n        }\n      };\n    },\n    toBeFunction() {\n      return {\n        compare(actual, expected) {\n          return {\n            pass: typeof actual === 'function'\n          };\n        }\n      };\n    },\n    toBeAroundValue() {\n      return {\n        compare(actual, expected, diff) {\n          diff = diff || 1;\n\n          var pass = actual >= expected - diff && actual <= expected + diff;\n          var message = `Expected ${actual} to be around ${expected} (between ${expected - diff} and ${expected + diff})`;\n\n          if (!pass) {\n            message = `Expected ${actual} NOT to be around ${expected} (between ${expected - diff} and ${expected + diff})`;\n          }\n\n          return {\n            pass,\n            message\n          };\n        }\n      };\n    },\n    toBeVisibleInViewport() {\n      return {\n        compare(actual) {\n          const viewport = hot().view.wt.wtTable.holder;\n          const verticalPosition = actual.offsetTop - viewport.scrollTop + scrollbarWidth + actual.clientHeight;\n          const horizontalPosition = actual.offsetLeft - viewport.scrollLeft + scrollbarWidth + actual.clientWidth;\n\n          const pass = verticalPosition < viewport.offsetHeight && verticalPosition > 0\n            && horizontalPosition < viewport.offsetWidth && horizontalPosition > 0;\n\n          return {\n            pass,\n            message: 'Expected the element to be visible in the Handsontable viewport'\n          };\n        }\n      };\n    },\n    toBeVisibleAtTopOfViewport() {\n      return {\n        compare(actual) {\n          const viewport = hot().view.wt.wtTable.holder;\n          const verticalPosition = actual.offsetTop - viewport.scrollTop - 1;\n\n          return {\n            pass: verticalPosition === 0,\n            message: 'Expected the element to be scrolled to the top of the Handsontable viewport'\n          };\n        }\n      };\n    },\n    toBeVisibleAtBottomOfViewport() {\n      return {\n        compare(actual) {\n          const viewport = hot().view.wt.wtTable.holder;\n          const verticalPosition = actual.offsetTop - viewport.scrollTop + scrollbarWidth + actual.clientHeight + 1;\n\n          return {\n            pass: verticalPosition === viewport.offsetHeight,\n            message: 'Expected the element to be scrolled to the bottom of the Handsontable viewport'\n          };\n        }\n      };\n    },\n    toBeVisibleAtLeftOfViewport() {\n      return {\n        compare(actual) {\n          const viewport = hot().view.wt.wtTable.holder;\n          const horizontalPosition = viewport.scrollLeft - actual.offsetLeft;\n\n          return {\n            pass: horizontalPosition === 0,\n            message: 'Expected the element to be scrolled to the top of the Handsontable viewport'\n          };\n        }\n      };\n    },\n    toBeVisibleAtRightOfViewport() {\n      return {\n        compare(actual) {\n          const viewport = hot().view.wt.wtTable.holder;\n          const horizontalPosition = viewport.scrollLeft - actual.offsetLeft + actual.clientWidth - scrollbarWidth + 1;\n\n          return {\n            pass: horizontalPosition === viewport.offsetWidth,\n            message: 'Expected the element to be scrolled to the top of the Handsontable viewport'\n          };\n        }\n      };\n    },\n    toBeListFulfillingCondition() {\n      const redColor = '\\x1b[31m';\n      const resetColor = '\\x1b[0m';\n\n      return {\n        compare(checkedArray, conditionFunction) {\n          if (typeof conditionFunction !== 'function') {\n            throw Error('Parameter passed to `toBeListFulfillingCondition` should be a function.');\n          }\n\n          const isListWithValues = Array.isArray(checkedArray) || checkedArray.length > 0;\n          const elementNotFulfillingCondition = checkedArray.find((element) => !conditionFunction(element));\n          const containsUndefined = isListWithValues && checkedArray.includes(undefined);\n          const pass = isListWithValues && !containsUndefined && elementNotFulfillingCondition === undefined;\n          let message;\n\n          if (!isListWithValues) {\n            message = 'Non-empty list should be passed as expect parameter.';\n\n          } else if (containsUndefined) {\n            message = `List ${redColor}${checkedArray.join(', ')}${resetColor} contains ${redColor}undefined${resetColor} value.`;\n\n          } else if (elementNotFulfillingCondition !== undefined) {\n            let entityValue = elementNotFulfillingCondition;\n\n            if (typeof elementNotFulfillingCondition === 'string') {\n              entityValue = `\"${elementNotFulfillingCondition}\"`;\n            }\n\n            message = `Entity ${redColor}${entityValue}${resetColor}, from list: ${redColor}${checkedArray.join(', ')}${resetColor} doesn't satisfy the condition.`;\n          }\n\n          return {\n            pass,\n            message\n          };\n        }\n      };\n    },\n    toBeMatchToSelectionPattern() {\n      const symbols = new Map([\n        ['C', 'current']\n      ]);\n\n      return {\n        compare(actualPattern) {\n          const currentState = [];\n          const rowsCount = hot().countRows();\n          const colsCount = hot().countCols();\n          const message = 'Expected the pattern selection to match to the visual state of the rendered selection.';\n\n          if (!Array.isArray(actualPattern)) {\n            return {\n              pass: false,\n              message,\n            };\n          }\n\n          for (let r = 0; r < rowsCount; r++) {\n            const currentRowState = [];\n\n            for (let c = 0; c < colsCount; c++) {\n              if (!actualPattern[r] || !actualPattern[r][c]) {\n                break;\n              }\n\n              const actualCell = actualPattern[r][c];\n\n              if (actualCell === ' ') {\n                currentRowState.push(' ');\n\n              } else {\n                const cell = hot().getCell(r, c);\n                const layerName = parseInt(actualCell, 10);\n                const isLayerChecking = !isNaN(layerName);\n                let className;\n\n                if (isLayerChecking) {\n                  className = layerName === 0 ? 'area' : `area-${layerName <= 7 ? layerName : 7}`;\n                } else {\n                  className = symbols.get(actualCell);\n                }\n\n                if (cell.classList.contains(className)) {\n                  currentRowState.push(actualCell);\n                } else {\n                  currentRowState.push('x');\n                }\n              }\n            }\n            currentState.push(currentRowState);\n          }\n\n          return {\n            pass: JSON.stringify(currentState) === JSON.stringify(actualPattern),\n            message,\n          };\n        }\n      };\n    },\n  };\n\n  jasmine.addMatchers(matchers);\n\n  if (document.activeElement && document.activeElement != document.body) {\n    document.activeElement.blur();\n\n  } else if (!document.activeElement) { // IE\n    document.body.focus();\n  }\n});\n\nafterEach(() => {\n  window.scrollTo(0, 0);\n});\n\n\n\n// WEBPACK FOOTER //\n// test/helpers/jasmine.js","export function sleep(delay = 100) {\r\n  return Promise.resolve({\r\n    then: function(resolve) {\r\n      setTimeout(resolve, delay);\r\n    }\r\n  });\r\n};\r\n\r\nexport function hot() {\r\n  return spec().$container.data('handsontable');\r\n};\r\n\r\nexport function handsontable(options) {\r\n  var currentSpec = spec();\r\n\r\n  currentSpec.$container.handsontable(options);\r\n  currentSpec.$container[0].focus(); // otherwise TextEditor tests do not pass in IE8\r\n\r\n  return currentSpec.$container.data('handsontable');\r\n};\r\n\r\n/**\r\n * As for v. 0.11 the only scrolling method is native scroll, which creates copies of main htCore table inside of the container.\r\n * Therefore, simple $(\".htCore\") will return more than one object. Most of the time, you're interested in the original\r\n * htCore, not the copies made by native scroll.\r\n *\r\n * This method returns the original htCore object\r\n *\r\n * @returns {jqObject} reference to the original htCore\r\n */\r\n\r\nexport function getHtCore() {\r\n  return spec().$container.find('.htCore').first();\r\n};\r\n\r\nexport function getTopClone() {\r\n  return spec().$container.find('.ht_clone_top');\r\n};\r\n\r\nexport function getTopLeftClone() {\r\n  return spec().$container.find('.ht_clone_top_left_corner');\r\n};\r\n// for compatybility\r\n// var getCornerClone = getTopLeftClone;\r\n\r\nexport function getLeftClone() {\r\n  return spec().$container.find('.ht_clone_left');\r\n};\r\n\r\nexport function getBottomClone() {\r\n  return spec().$container.find('.ht_clone_bottom');\r\n};\r\n\r\nexport function getBottomLeftClone() {\r\n  return spec().$container.find('.ht_clone_bottom_left_corner');\r\n};\r\n\r\n// Rename me to countTD\r\nexport function countCells() {\r\n  return getHtCore().find('tbody td').length;\r\n};\r\n\r\nexport function isEditorVisible() {\r\n  return !!(keyProxy().is(':visible') && keyProxy().parent().is(':visible') && !keyProxy().parent().is('.htHidden'));\r\n};\r\n\r\nexport function isFillHandleVisible() {\r\n  return !!spec().$container.find('.wtBorder.corner:visible').length;\r\n};\r\n\r\nexport function getCorrespondingOverlay(cell, container) {\r\n  var overlay = $(cell).parents('.handsontable');\r\n\r\n  if (overlay[0] == container[0]) {\r\n    return $('.ht_master');\r\n  }\r\n\r\n  return $(overlay[0]);\r\n};\r\n\r\n/**\r\n * Shows context menu\r\n */\r\nexport function contextMenu(cell) {\r\n  var hot = spec().$container.data('handsontable');\r\n  var selected = hot.getSelectedLast();\r\n\r\n  if (!selected) {\r\n    hot.selectCell(0, 0);\r\n    selected = hot.getSelectedLast();\r\n  }\r\n  if (!cell) {\r\n    cell = getCell(selected[0], selected[1]);\r\n  }\r\n  var cellOffset = $(cell).offset();\r\n\r\n  $(cell).simulate('mousedown', { button: 2 });\r\n  $(cell).simulate('contextmenu', {\r\n    clientX: cellOffset.left - Handsontable.dom.getWindowScrollLeft(),\r\n    clientY: cellOffset.top - Handsontable.dom.getWindowScrollTop(),\r\n  });\r\n  $(cell).simulate('mouseup', { button: 2 });\r\n};\r\n\r\nexport function closeContextMenu() {\r\n  $(document).simulate('mousedown');\r\n  // $(document).trigger('mousedown');\r\n};\r\n\r\n/**\r\n * Shows dropdown menu\r\n */\r\nexport function dropdownMenu(columnIndex) {\r\n  var hot = spec().$container.data('handsontable');\r\n  var th = hot.view.wt.wtTable.getColumnHeader(columnIndex || 0);\r\n  var button = th.querySelector('.changeType');\r\n\r\n  if (button) {\r\n    $(button).simulate('mousedown');\r\n    $(button).simulate('click');\r\n  }\r\n};\r\n\r\nexport function closeDropdownMenu() {\r\n  $(document).simulate('mousedown');\r\n};\r\n\r\nexport function dropdownMenuRootElement() {\r\n  var plugin = hot().getPlugin('dropdownMenu');\r\n  var root;\r\n\r\n  if (plugin && plugin.menu) {\r\n    root = plugin.menu.container;\r\n  }\r\n\r\n  return root;\r\n};\r\n\r\n/**\r\n * Returns a function that triggers a mouse event\r\n * @param {String} type Event type\r\n * @return {Function}\r\n */\r\nexport function handsontableMouseTriggerFactory(type, button) {\r\n  return function(element) {\r\n    if (!(element instanceof jQuery)) {\r\n      element = $(element);\r\n    }\r\n    var ev = $.Event(type);\r\n    ev.which = button || 1; // left click by default\r\n\r\n    element.simulate(type, ev);\r\n  };\r\n};\r\n\r\nexport const mouseDown = handsontableMouseTriggerFactory('mousedown');\r\nexport const mouseMove = handsontableMouseTriggerFactory('mousemove');\r\nexport const mouseOver = handsontableMouseTriggerFactory('mouseover');\r\nexport const mouseUp = handsontableMouseTriggerFactory('mouseup');\r\n\r\nexport function mouseDoubleClick(element) {\r\n  mouseDown(element);\r\n  mouseUp(element);\r\n  mouseDown(element);\r\n  mouseUp(element);\r\n};\r\n\r\nexport const mouseRightDown = handsontableMouseTriggerFactory('mousedown', 3);\r\nexport const mouseRightUp = handsontableMouseTriggerFactory('mouseup', 3);\r\n\r\n/**\r\n * Returns a function that triggers a key event\r\n * @param {String} type Event type\r\n * @return {Function}\r\n */\r\nexport function handsontableKeyTriggerFactory(type) {\r\n  return function(key, extend) {\r\n    var ev = {}; // $.Event(type);\r\n\r\n    if (typeof key === 'string') {\r\n      if (key.indexOf('shift+') > -1) {\r\n        key = key.substring(6);\r\n        ev.shiftKey = true;\r\n      }\r\n\r\n      if (key.indexOf('ctrl+') > -1) {\r\n        key = key.substring(5);\r\n        ev.ctrlKey = true;\r\n        ev.metaKey = true;\r\n      }\r\n\r\n      switch (key) {\r\n        case 'tab':\r\n          ev.keyCode = 9;\r\n          break;\r\n\r\n        case 'enter':\r\n          ev.keyCode = 13;\r\n          break;\r\n\r\n        case 'esc':\r\n          ev.keyCode = 27;\r\n          break;\r\n\r\n        case 'f2':\r\n          ev.keyCode = 113;\r\n          break;\r\n\r\n        case 'arrow_left':\r\n          ev.keyCode = 37;\r\n          break;\r\n\r\n        case 'arrow_up':\r\n          ev.keyCode = 38;\r\n          break;\r\n\r\n        case 'arrow_right':\r\n          ev.keyCode = 39;\r\n          break;\r\n\r\n        case 'arrow_down':\r\n          ev.keyCode = 40;\r\n          break;\r\n\r\n        case 'ctrl':\r\n          if (window.navigator.platform.includes('Mac')) {\r\n            ev.keyCode = 91;\r\n          } else {\r\n            ev.keyCode = 17;\r\n          }\r\n          break;\r\n\r\n        case 'shift':\r\n          ev.keyCode = 16;\r\n          break;\r\n\r\n        case 'backspace':\r\n          ev.keyCode = 8;\r\n          break;\r\n\r\n        case 'delete':\r\n          ev.keyCode = 46;\r\n          break;\r\n\r\n        case 'space':\r\n          ev.keyCode = 32;\r\n          break;\r\n\r\n        case 'x':\r\n          ev.keyCode = 88;\r\n          break;\r\n\r\n        case 'c':\r\n          ev.keyCode = 67;\r\n          break;\r\n\r\n        case 'v':\r\n          ev.keyCode = 86;\r\n          break;\r\n\r\n        default:\r\n          throw new Error(`Unrecognised key name: ${key}`);\r\n      }\r\n    } else if (typeof key === 'number') {\r\n      ev.keyCode = key;\r\n    }\r\n    //    ev.originalEvent = {}; //needed as long Handsontable searches for event.originalEvent\r\n    $.extend(ev, extend);\r\n    $(document.activeElement).simulate(type, ev);\r\n  };\r\n};\r\n\r\nexport const keyDown = handsontableKeyTriggerFactory('keydown');\r\nexport const keyUp = handsontableKeyTriggerFactory('keyup');\r\n\r\n/**\r\n * Presses keyDown, then keyUp\r\n */\r\nexport function keyDownUp(key, extend) {\r\n  if (typeof key === 'string' && key.indexOf('shift+') > -1) {\r\n    keyDown('shift');\r\n  }\r\n\r\n  keyDown(key, extend);\r\n  keyUp(key, extend);\r\n\r\n  if (typeof key === 'string' && key.indexOf('shift+') > -1) {\r\n    keyUp('shift');\r\n  }\r\n};\r\n\r\n/**\r\n * Returns current value of the keyboard proxy textarea\r\n * @return {String}\r\n */\r\nexport function keyProxy() {\r\n  return spec().$container.find('textarea.handsontableInput');\r\n};\r\n\r\nexport function serveImmediatePropagation(event) {\r\n  if (event != null && event.isImmediatePropagationEnabled == null) {\r\n    event.stopImmediatePropagation = function() {\r\n      this.isImmediatePropagationEnabled = false;\r\n      this.cancelBubble = true;\r\n    };\r\n    event.isImmediatePropagationEnabled = true;\r\n    event.isImmediatePropagationStopped = function() {\r\n      return !this.isImmediatePropagationEnabled;\r\n    };\r\n  }\r\n\r\n  return event;\r\n};\r\n\r\nexport function autocompleteEditor() {\r\n  return spec().$container.find('.handsontableInput');\r\n};\r\n\r\n/**\r\n * Sets text cursor inside keyboard proxy\r\n */\r\nexport function setCaretPosition(pos) {\r\n  var el = keyProxy()[0];\r\n\r\n  if (el.setSelectionRange) {\r\n    el.focus();\r\n    el.setSelectionRange(pos, pos);\r\n  } else if (el.createTextRange) {\r\n    var range = el.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n};\r\n\r\n/**\r\n * Returns autocomplete instance\r\n */\r\nexport function autocomplete() {\r\n  return spec().$container.find('.autocompleteEditor');\r\n};\r\n\r\n/**\r\n * Triggers paste string on current selection\r\n */\r\nexport function triggerPaste(str) {\r\n  spec().$container.data('handsontable').getPlugin('CopyPaste').paste(str);\r\n};\r\n\r\n/**\r\n * Calls a method in current Handsontable instance, returns its output\r\n * @param method\r\n * @return {Function}\r\n */\r\nexport function handsontableMethodFactory(method) {\r\n  return function() {\r\n    var instance;\r\n    try {\r\n      instance = spec().$container.handsontable('getInstance');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    if (instance) {\r\n      if (method === 'destroy') {\r\n        spec().$container.removeData();\r\n      }\r\n    } else {\r\n      if (method === 'destroy') {\r\n        return; // we can forgive this... maybe it was destroyed in the test\r\n      }\r\n      throw new Error('Something wrong with the test spec: Handsontable instance not found');\r\n    }\r\n\r\n    return instance[method](...arguments);\r\n  };\r\n};\r\n\r\nexport const addHook = handsontableMethodFactory('addHook');\r\nexport const alter = handsontableMethodFactory('alter');\r\nexport const colToProp = handsontableMethodFactory('colToProp');\r\nexport const countCols = handsontableMethodFactory('countCols');\r\nexport const countEmptyCols = handsontableMethodFactory('countEmptyCols');\r\nexport const countEmptyRows = handsontableMethodFactory('countEmptyRows');\r\nexport const countRows = handsontableMethodFactory('countRows');\r\nexport const countSourceCols = handsontableMethodFactory('countSourceCols');\r\nexport const countSourceRows = handsontableMethodFactory('countSourceRows');\r\nexport const deselectCell = handsontableMethodFactory('deselectCell');\r\nexport const destroy = handsontableMethodFactory('destroy');\r\nexport const destroyEditor = handsontableMethodFactory('destroyEditor');\r\nexport const emptySelectedCells = handsontableMethodFactory('emptySelectedCells');\r\nexport const getActiveEditor = handsontableMethodFactory('getActiveEditor');\r\nexport const getCell = handsontableMethodFactory('getCell');\r\nexport const getCellEditor = handsontableMethodFactory('getCellEditor');\r\nexport const getCellMeta = handsontableMethodFactory('getCellMeta');\r\nexport const getCellMetaAtRow = handsontableMethodFactory('getCellMetaAtRow');\r\nexport const getCellRenderer = handsontableMethodFactory('getCellRenderer');\r\nexport const getCellsMeta = handsontableMethodFactory('getCellsMeta');\r\nexport const getCellValidator = handsontableMethodFactory('getCellValidator');\r\nexport const getColHeader = handsontableMethodFactory('getColHeader');\r\nexport const getCopyableData = handsontableMethodFactory('getCopyableData');\r\nexport const getCopyableText = handsontableMethodFactory('getCopyableText');\r\nexport const getData = handsontableMethodFactory('getData');\r\nexport const getDataAtCell = handsontableMethodFactory('getDataAtCell');\r\nexport const getDataAtCol = handsontableMethodFactory('getDataAtCol');\r\nexport const getDataAtRow = handsontableMethodFactory('getDataAtRow');\r\nexport const getDataAtRowProp = handsontableMethodFactory('getDataAtRowProp');\r\nexport const getDataType = handsontableMethodFactory('getDataType');\r\nexport const getInstance = handsontableMethodFactory('getInstance');\r\nexport const getRowHeader = handsontableMethodFactory('getRowHeader');\r\nexport const getSelected = handsontableMethodFactory('getSelected');\r\nexport const getSelectedLast = handsontableMethodFactory('getSelectedLast');\r\nexport const getSelectedRange = handsontableMethodFactory('getSelectedRange');\r\nexport const getSelectedRangeLast = handsontableMethodFactory('getSelectedRangeLast');\r\nexport const getSourceData = handsontableMethodFactory('getSourceData');\r\nexport const getSourceDataArray = handsontableMethodFactory('getSourceDataArray');\r\nexport const getSourceDataAtCell = handsontableMethodFactory('getSourceDataAtCell');\r\nexport const getSourceDataAtCol = handsontableMethodFactory('getSourceDataAtCol');\r\nexport const getSourceDataAtRow = handsontableMethodFactory('getSourceDataAtRow');\r\nexport const getValue = handsontableMethodFactory('getValue');\r\nexport const loadData = handsontableMethodFactory('loadData');\r\nexport const populateFromArray = handsontableMethodFactory('populateFromArray');\r\nexport const propToCol = handsontableMethodFactory('propToCol');\r\nexport const removeCellMeta = handsontableMethodFactory('removeCellMeta');\r\nexport const render = handsontableMethodFactory('render');\r\nexport const selectCell = handsontableMethodFactory('selectCell');\r\nexport const selectCells = handsontableMethodFactory('selectCells');\r\nexport const selectColumns = handsontableMethodFactory('selectColumns');\r\nexport const selectRows = handsontableMethodFactory('selectRows');\r\nexport const setCellMeta = handsontableMethodFactory('setCellMeta');\r\nexport const setDataAtCell = handsontableMethodFactory('setDataAtCell');\r\nexport const setDataAtRowProp = handsontableMethodFactory('setDataAtRowProp');\r\nexport const spliceCellsMeta = handsontableMethodFactory('spliceCellsMeta');\r\nexport const spliceCol = handsontableMethodFactory('spliceCol');\r\nexport const spliceRow = handsontableMethodFactory('spliceRow');\r\nexport const updateSettings = handsontableMethodFactory('updateSettings');\r\n\r\n/**\r\n * Returns column width for HOT container\r\n * @param $elem\r\n * @param col\r\n * @returns {Number}\r\n */\r\nexport function colWidth($elem, col) {\r\n  var TR = $elem[0].querySelector('TBODY TR');\r\n  var cell;\r\n\r\n  if (TR) {\r\n    cell = TR.querySelectorAll('TD')[col];\r\n  } else {\r\n    cell = $elem[0].querySelector('THEAD TR').querySelectorAll('TH')[col];\r\n  }\r\n\r\n  if (!cell) {\r\n    throw new Error(`Cannot find table column of index '${col}'`);\r\n  }\r\n\r\n  return cell.offsetWidth;\r\n}\r\n\r\n/**\r\n * Returns row height for HOT container\r\n * @param $elem\r\n * @param row\r\n * @returns {Number}\r\n */\r\nexport function rowHeight($elem, row) {\r\n  var TD;\r\n\r\n  if (row >= 0) {\r\n    TD = $elem[0].querySelector(`tbody tr:nth-child(${row + 1}) td`);\r\n  } else {\r\n    TD = $elem[0].querySelector(`thead tr:nth-child(${Math.abs(row)})`);\r\n  }\r\n\r\n  if (!TD) {\r\n    throw new Error(`Cannot find table row of index '${row}'`);\r\n  }\r\n\r\n  return Handsontable.dom.outerHeight(TD);\r\n}\r\n\r\n/**\r\n * Returns value that has been rendered in table cell\r\n * @param {Number} trIndex\r\n * @param {Number} tdIndex\r\n * @returns {String}\r\n */\r\nexport function getRenderedValue(trIndex, tdIndex) {\r\n  return spec().$container.find('tbody tr').eq(trIndex).find('td').eq(tdIndex).html();\r\n}\r\n\r\n/**\r\n * Returns nodes that have been rendered in table cell\r\n * @param {Number} trIndex\r\n * @param {Number} tdIndex\r\n * @returns {String}\r\n */\r\nexport function getRenderedContent(trIndex, tdIndex) {\r\n  return spec().$container.find('tbody tr').eq(trIndex).find('td').eq(tdIndex).children();\r\n}\r\n\r\n/**\r\n * Create numerical data values for the table\r\n * @param rowCount\r\n * @param colCount\r\n * @returns {Array}\r\n */\r\nexport function createNumericData(rowCount, colCount) {\r\n  rowCount = typeof rowCount === 'number' ? rowCount : 100;\r\n  colCount = typeof colCount === 'number' ? colCount : 4;\r\n\r\n  var\r\n    rows = [],\r\n    i,\r\n    j;\r\n\r\n  for (i = 0; i < rowCount; i++) {\r\n    var row = [];\r\n\r\n    for (j = 0; j < colCount; j++) {\r\n      row.push((i + 1));\r\n    }\r\n    rows.push(row);\r\n  }\r\n\r\n  return rows;\r\n}\r\n\r\n/**\r\n * Model factory, which creates object with private properties, accessible by setters and getters.\r\n * Created for the purpose of testing HOT with Backbone-like Models\r\n * @param opts\r\n * @returns {{}}\r\n * @constructor\r\n */\r\nexport function Model(opts) {\r\n  var obj = {};\r\n\r\n  var _data = $.extend({\r\n    id: undefined,\r\n    name: undefined,\r\n    address: undefined\r\n  }, opts);\r\n\r\n  obj.attr = function(name, value) {\r\n    if (typeof value === 'undefined') {\r\n      return this.get(name);\r\n    }\r\n\r\n    return this.set(name, value);\r\n  };\r\n\r\n  obj.get = function(name) {\r\n    return _data[name];\r\n  };\r\n\r\n  obj.set = function(name, value) {\r\n    _data[name] = value;\r\n\r\n    return this;\r\n  };\r\n\r\n  return obj;\r\n}\r\n/**\r\n * Factory which produces an accessor for objects of type \"Model\" (see above).\r\n * This function should be used to create accessor for a given property name and pass it as `data` option in column\r\n * configuration.\r\n *\r\n * @param name - name of the property for which an accessor function will be created\r\n * @returns {Function}\r\n */\r\nexport function createAccessorForProperty(name) {\r\n  return function(obj, value) {\r\n    return obj.attr(name, value);\r\n  };\r\n}\r\n\r\nexport function resizeColumn(displayedColumnIndex, width) {\r\n  var $container = spec().$container;\r\n  var $th = $container.find(`thead tr:eq(0) th:eq(${displayedColumnIndex})`);\r\n\r\n  $th.simulate('mouseover');\r\n\r\n  var $resizer = $container.find('.manualColumnResizer');\r\n  var resizerPosition = $resizer.position();\r\n\r\n  $resizer.simulate('mousedown', {\r\n    clientX: resizerPosition.left,\r\n  });\r\n\r\n  var delta = width - $th.width() - 2;\r\n  var newPosition = resizerPosition.left + delta;\r\n  $resizer.simulate('mousemove', {\r\n    clientX: newPosition\r\n  });\r\n\r\n  $resizer.simulate('mouseup');\r\n}\r\n\r\nexport function resizeRow(displayedRowIndex, height) {\r\n  var $container = spec().$container;\r\n  var $th = $container.find(`tbody tr:eq(${displayedRowIndex}) th:eq(0)`);\r\n\r\n  $th.simulate('mouseover');\r\n\r\n  var $resizer = $container.find('.manualRowResizer');\r\n  var resizerPosition = $resizer.position();\r\n\r\n  $resizer.simulate('mousedown', {\r\n    clientY: resizerPosition.top\r\n  });\r\n\r\n  var delta = height - $th.height() - 2;\r\n\r\n  if (delta < 0) {\r\n    delta = 0;\r\n  }\r\n\r\n  $resizer.simulate('mousemove', {\r\n    clientY: resizerPosition.top + delta\r\n  });\r\n\r\n  $resizer.simulate('mouseup');\r\n}\r\n\r\nexport function moveSecondDisplayedRowBeforeFirstRow(container, secondDisplayedRowIndex) {\r\n  var\r\n    $mainContainer = container.parents('.handsontable').not('[class*=clone]').not('[class*=master]').first(),\r\n    $rowHeaders = container.find('tbody tr th'),\r\n    $firstRowHeader = $rowHeaders.eq(secondDisplayedRowIndex - 1),\r\n    $secondRowHeader = $rowHeaders.eq(secondDisplayedRowIndex);\r\n\r\n  $secondRowHeader.simulate('mouseover');\r\n  var $manualRowMover = $mainContainer.find('.manualRowMover');\r\n\r\n  if ($manualRowMover.length) {\r\n    $manualRowMover.simulate('mousedown', {\r\n      clientY: $manualRowMover[0].getBoundingClientRect().top\r\n    });\r\n\r\n    $manualRowMover.simulate('mousemove', {\r\n      clientY: $manualRowMover[0].getBoundingClientRect().top - 20\r\n    });\r\n\r\n    $firstRowHeader.simulate('mouseover');\r\n    $secondRowHeader.simulate('mouseup');\r\n  }\r\n}\r\n\r\nexport function moveFirstDisplayedRowAfterSecondRow(container, firstDisplayedRowIndex) {\r\n  var\r\n    $mainContainer = container.parents('.handsontable').not('[class*=clone]').not('[class*=master]').first(),\r\n    $rowHeaders = container.find('tbody tr th'),\r\n    $firstRowHeader = $rowHeaders.eq(firstDisplayedRowIndex),\r\n    $secondRowHeader = $rowHeaders.eq(firstDisplayedRowIndex + 1);\r\n\r\n  $secondRowHeader.simulate('mouseover');\r\n  var $manualRowMover = $mainContainer.find('.manualRowMover');\r\n\r\n  if ($manualRowMover.length) {\r\n    $manualRowMover.simulate('mousedown', {\r\n      clientY: $manualRowMover[0].getBoundingClientRect().top\r\n    });\r\n\r\n    $manualRowMover.simulate('mousemove', {\r\n      clientY: $manualRowMover[0].getBoundingClientRect().top + 20\r\n    });\r\n\r\n    $firstRowHeader.simulate('mouseover');\r\n    $secondRowHeader.simulate('mouseup');\r\n  }\r\n}\r\n\r\nexport function swapDisplayedColumns(container, from, to) {\r\n  var $mainContainer = container.parents('.handsontable').not('[class*=clone]').not('[class*=master]').first();\r\n  var $colHeaders = container.find('thead tr:eq(0) th');\r\n  var $to = $colHeaders.eq(to);\r\n  var $from = $colHeaders.eq(from);\r\n\r\n  // Enter the second column header\r\n  $from.simulate('mouseover');\r\n  var $manualColumnMover = $mainContainer.find('.manualColumnMover');\r\n\r\n  // Grab the second column\r\n  $manualColumnMover.simulate('mousedown', {\r\n    pageX: $manualColumnMover[0].getBoundingClientRect().left,\r\n  });\r\n\r\n  // Drag the second column over the first column\r\n  $manualColumnMover.simulate('mousemove', {\r\n    pageX: $manualColumnMover[0].getBoundingClientRect().left - 20,\r\n  });\r\n\r\n  $to.simulate('mouseover');\r\n\r\n  // Drop the second column\r\n  $from.simulate('mouseup');\r\n}\r\n\r\nexport function triggerTouchEvent(type, target, pageX, pageY) {\r\n  var e = document.createEvent('TouchEvent');\r\n  var targetCoords = target.getBoundingClientRect();\r\n  var touches;\r\n  var targetTouches;\r\n  var changedTouches;\r\n\r\n  if (!pageX && !pageY) {\r\n    pageX = parseInt(targetCoords.left + 3, 10);\r\n    pageY = parseInt(targetCoords.top + 3, 10);\r\n  }\r\n\r\n  var touch = document.createTouch(window, target, 0, pageX, pageY, pageX, pageY);\r\n\r\n  if (type == 'touchend') {\r\n    touches = document.createTouchList();\r\n    targetTouches = document.createTouchList();\r\n    changedTouches = document.createTouchList(touch);\r\n  } else {\r\n    touches = document.createTouchList(touch);\r\n    targetTouches = document.createTouchList(touch);\r\n    changedTouches = document.createTouchList(touch);\r\n  }\r\n\r\n  e.initTouchEvent(type, true, true, window, null, 0, 0, 0, 0, false, false, false, false, touches, targetTouches, changedTouches, 1, 0);\r\n  target.dispatchEvent(e);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// test/helpers/common.js"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAhCA;AAkCA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AArDA;AAuDA;AA9MA;AACA;AAgNA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}